{"version":3,"file":"cwqr.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,GAChB,CATD,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,GAAO,G,gFCLvD,IAAMC,EAAU,CACrB,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,QACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,IACN,GAAM,IACN,GAAM,OACN,GAAM,IACN,GAAM,MACN,GAAM,IACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,IACN,KAAM,cACN,KAAM,IACN,KAAM,GACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,GAAM,cACN,GAAM,gBACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,IACN,GAAM,IACN,KAAM,mBACN,KAAM,IACN,KAAM,UACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,WACN,GAAM,SACN,GAAM,kBACN,GAAM,UACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,iBACN,GAAM,iBACN,KAAM,kBACN,KAAM,iBACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,IACN,GAAM,eACN,GAAM,eACN,GAAM,eACN,GAAM,iBACN,GAAM,iBACN,GAAM,mBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,KAAM,iBACN,KAAM,iBACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,eACN,GAAM,eACN,GAAM,eACN,GAAM,MACN,GAAM,OACN,GAAM,UACN,GAAM,QACN,GAAM,aACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,KAAM,cACN,KAAM,cACN,KAAM,cACN,KAAM,SACN,KAAM,iBACN,KAAM,iBACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,iBACN,GAAM,kBACN,GAAM,iBACN,GAAM,kBACN,GAAM,uBACN,GAAM,iBACN,GAAM,iBACN,KAAM,oBACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,iBACN,GAAM,iBACN,GAAM,sBACN,GAAM,mBACN,GAAM,mBACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,gBACN,GAAM,iBACN,GAAM,kBACN,GAAM,iBACN,GAAM,GACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,UACN,GAAM,QACN,GAAM,oBACN,GAAM,SACN,GAAM,UACN,GAAM,cACN,GAAM,cACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,WACN,GAAM,WACN,GAAM,aACN,GAAM,aACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,IACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,IACN,GAAM,KACN,GAAM,aACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,IACN,GAAM,mCACN,GAAM,sCACN,GAAM,mDACN,GAAM,QACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,IACN,GAAM,YACN,GAAM,iBACN,GAAM,iBACN,GAAM,OACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,GACN,GAAM,sCACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,IChQKC,EAAa,CACxB,GAAM,gBACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,KAAM,mBACN,KAAM,UACN,KAAM,IACN,GAAM,KACN,GAAM,MCfKC,EAAU,CACrB,KAAM,GACN,KAAM,kBACN,KAAM,kBACN,KAAM,oBACN,KAAM,oBACN,KAAM,mBACN,KAAM,mBACN,KAAM,oBACN,KAAM,oBACN,KAAM,oBACN,KAAM,oBACN,KAAM,oBACN,KAAM,oBACN,KAAM,iBACN,KAAM,iBACN,KAAM,uBACN,GAAM,uBACN,GAAM,uBACN,GAAM,uBACN,GAAM,kBACN,GAAM,kBACN,GAAM,yBACN,GAAM,yBACN,GAAM,yBACN,GAAM,yBACN,GAAM,2BACN,KAAM,0BACN,KAAM,0BACN,KAAM,0BACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,iBACN,KAAM,iBACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,ghQKC,EAAU,CACrB,KAAM,GACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,mBACN,GAAM,GACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,SACN,GAAM,SACN,KAAM,eACN,KAAM,eACN,KAAM,SACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,mBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,mhQKC,EAAa,CACxB,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,KAAM,eACN,KAAM,eACN,KAAM,KCbKC,EAAU,CACrB,KAAM,GACN,KAAM,wBACN,KAAM,sBACN,KAAM,cACN,KAAM,wBACN,KAAM,sBACN,KAAM,uBACN,KAAM,wBACN,KAAM,mCACN,KAAM,wBACN,KAAM,mBACN,KAAM,mBACN,KAAM,mBACN,KAAM,mBACN,KAAM,0BACN,KAAM,0BACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,gBACN,GAAM,eACN,GAAM,gBACN,GAAM,eACN,GAAM,mBACN,GAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,kBACN,KAAM,iBACN,KAAM,kBACN,KAAM,iBACN,GAAM,eACN,GAAM,cACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,oBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,mBACN,GAAM,UACN,GAAM,MACN,GAAM,iBACN,GAAM,iBACN,GAAM,SACN,GAAM,UACN,KAAM,gBACN,KAAM,qBACN,KAAM,QACN,KAAM,sBACN,KAAM,sBACN,KAAM,gBACN,GAAM,MACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,oBACN,GAAM,MACN,GAAM,MACN,GAAM,gBACN,GAAM,MACN,GAAM,gBACN,KAAM,MACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,UACN,KAAM,gBACN,GAAM,WACN,GAAM,YACN,GAAM,MACN,GAAM,UACN,GAAM,UACN,GAAM,MACN,GAAM,MACN,GAAM,YACN,GAAM,gBACN,GAAM,gBACN,KAAM,gBACN,KAAM,gBACN,KAAM,oBACN,KAAM,mBACN,KAAM,mhQKC,EAAU,CACrB,KAAM,GACN,KAAM,kBACN,KAAM,kBACN,KAAM,iBACN,KAAM,iBACN,KAAM,iBACN,KAAM,iBACN,KAAM,oBACN,KAAM,oBACN,KAAM,uBACN,KAAM,uBACN,KAAM,qBACN,KAAM,qBACN,KAAM,sBACN,KAAM,sBACN,KAAM,sBACN,GAAM,sBACN,GAAM,kBACN,GAAM,kBACN,GAAM,qBACN,GAAM,qBACN,GAAM,iBACN,GAAM,iBACN,GAAM,kBACN,GAAM,kBACN,GAAM,mBACN,KAAM,mBACN,KAAM,oBACN,KAAM,oBACN,KAAM,kBACN,KAAM,kBACN,KAAM,wBACN,GAAM,wBACN,GAAM,0BACN,GAAM,0BACN,GAAM,yBACN,GAAM,yBACN,GAAM,kCACN,GAAM,kCACN,GAAM,kBACN,GAAM,kBACN,GAAM,gBACN,KAAM,gBACN,KAAM,iBACN,KAAM,iBACN,KAAM,iBACN,KAAM,iBACN,KAAM,iBACN,GAAM,iBACN,GAAM,mBACN,GAAM,mBACN,GAAM,kBACN,GAAM,kBACN,GAAM,mBACN,GAAM,mBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,KAAM,kBACN,KAAM,mBACN,KAAM,mBACN,KAAM,qBACN,KAAM,qBACN,KAAM,sBACN,GAAM,sBACN,GAAM,wBACN,GAAM,wBACN,GAAM,kBACN,GAAM,kBACN,GAAM,iBACN,GAAM,iBACN,GAAM,kBACN,GAAM,kBACN,GAAM,oBACN,KAAM,oBACN,KAAM,2BACN,KAAM,2BACN,KAAM,2BACN,KAAM,2BACN,KAAM,qBACN,GAAM,qBACN,GAAM,qBACN,GAAM,qBACN,GAAM,oBACN,GAAM,oBACN,GAAM,yBACN,GAAM,yBACN,GAAM,0BACN,GAAM,0BACN,GAAM,qBACN,KAAM,qBACN,KAAM,kBACN,KAAM,kBACN,KAAM,mBACN,KAAM,mBACN,KAAM,oBACN,GAAM,oBACN,GAAM,gBACN,GAAM,gBACN,GAAM,kBACN,GAAM,kBACN,GAAM,uBACN,GAAM,uBACN,GAAM,qBACN,GAAM,qBACN,GAAM,sBACN,KAAM,sBACN,KAAM,mCACN,KAAM,mCACN,KAAM,kBACN,KAAM,kBACN,KAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,mBACN,GAAM,mBACN,GAAM,wBACN,GAAM,wBACN,GAAM,wBACN,GAAM,wBACN,GAAM,sBACN,KAAM,sBACN,KAAM,oBACN,KAAM,oBACN,KAAM,kBACN,KAAM,kBACN,KAAM,iBACN,GAAM,iBACN,GAAM,kBACN,GAAM,kBACN,GAAM,uBACN,GAAM,uBACN,GAAM,uBACN,GAAM,uBACN,GAAM,yBACN,GAAM,yBACN,GAAM,wBACN,KAAM,wBACN,KAAM,gDACN,KAAM,gDACN,KAAM,yBACN,KAAM,yBACN,KAAM,qBACN,GAAM,qBACN,GAAM,gBACN,GAAM,gBACN,GAAM,mBACN,GAAM,mBACN,GAAM,kBACN,GAAM,kBACN,GAAM,gBACN,GAAM,gBACN,GAAM,sBACN,KAAM,sBACN,KAAM,kBACN,KAAM,kBACN,KAAM,kBACN,KAAM,kBACN,KAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,mBACN,GAAM,gBACN,GAAM,gBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,iBACN,GAAM,iBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,gBACN,GAAM,gBACN,GAAM,mBACN,GAAM,mBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,iBACN,GAAM,iBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,iBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,gBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,oBACN,GAAM,oBACN,GAAM,oBACN,GAAM,oBACN,GAAM,wBACN,GAAM,wBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,kBACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM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","sources":["webpack://cwqr/webpack/universalModuleDefinition","webpack://cwqr/webpack/bootstrap","webpack://cwqr/webpack/runtime/define property getters","webpack://cwqr/webpack/runtime/hasOwnProperty shorthand","webpack://cwqr/webpack/runtime/make namespace object","webpack://cwqr/./src/ascii/00.js","webpack://cwqr/./src/ascii/00_EY.js","webpack://cwqr/./src/ascii/FA.js","webpack://cwqr/./src/ascii/FB.js","webpack://cwqr/./src/ascii/FB_EY.js","webpack://cwqr/./src/ascii/FD.js","webpack://cwqr/./src/ascii/FE.js","webpack://cwqr/./src/ascii/FE_JP.js","webpack://cwqr/./src/model/CY.js","webpack://cwqr/./src/model/EY.js","webpack://cwqr/./src/model/index.js","webpack://cwqr/./src/ascii/index.js","webpack://cwqr/./src/mode/menu.js","webpack://cwqr/./src/mode/mode.js","webpack://cwqr/./src/utils.js","webpack://cwqr/./src/mode/index.js","webpack://cwqr/./src/setup/setup.js","webpack://cwqr/./src/setup/index.js","webpack://cwqr/./src/expression/index.js","webpack://cwqr/./node_modules/decimal.js/decimal.mjs","webpack://cwqr/./src/variable/index.js","webpack://cwqr/./src/variable/input.js","webpack://cwqr/./src/variable/C.js","webpack://cwqr/./src/variable/T.js","webpack://cwqr/./src/variable/V.js","webpack://cwqr/./src/variable/result.js","webpack://cwqr/./src/variable/R.js","webpack://cwqr/./src/index.js","webpack://cwqr/./src/variable/P.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cwqr\"] = factory();\n\telse\n\t\troot[\"cwqr\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const ascii00 = {\n  \"00\": \"\",\n  \"01\": \"\",\n  \"02\": \"\",\n  \"03\": \"\",\n  \"04\": \"\",\n  \"05\": \"\",\n  \"06\": \"\",\n  \"07\": \"\",\n  \"08\": \"\",\n  \"09\": \"\",\n  \"0A\": \"\",\n  \"0B\": \"\",\n  \"0C\": \"\",\n  \"0D\": \"\",\n  \"0E\": \"\",\n  \"0F\": \"\",\n  \"10\": \"\",\n  \"11\": \"\",\n  \"12\": \"\",\n  \"13\": \"\",\n  \"14\": \"\",\n  \"15\": \"\",\n  \"16\": \"\",\n  \"17\": \"\",\n  \"18\": \"\",\n  \"19\": \"\\\\Box\",\n  \"1A\": \"\",\n  \"1B\": \"\",\n  \"1C\": \"\",\n  \"1D\": \"\",\n  \"1E\": \"\",\n  \"1F\": \"\",\n  \"20\": \"i\",\n  \"21\": \"e\",\n  \"22\": \"\\\\pi\",\n  \"23\": \":\",\n  \"24\": \"\\\\$\",\n  \"25\": \"?\",\n  \"26\": \"\",\n  \"27\": \"\",\n  \"28\": \"\",\n  \"29\": \"\",\n  \"2A\": \"\",\n  \"2B\": \"\",\n  \"2C\": \",\",\n  \"2D\": \"\\\\mathrm{E}\",\n  \"2E\": \".\",\n  \"2F\": \"\",\n  \"30\": \"0\",\n  \"31\": \"1\",\n  \"32\": \"2\",\n  \"33\": \"3\",\n  \"34\": \"4\",\n  \"35\": \"5\",\n  \"36\": \"6\",\n  \"37\": \"7\",\n  \"38\": \"8\",\n  \"39\": \"9\",\n  \"3A\": \"\\\\textbf{A}\",\n  \"3B\": \"\\\\textbf{B}\",\n  \"3C\": \"\\\\textbf{C}\",\n  \"3D\": \"\\\\textbf{D}\",\n  \"3E\": \"\\\\textbf{E}\",\n  \"3F\": \"\\\\textbf{F}\",\n  \"40\": \"\\\\mathrm{M}\",\n  \"41\": \"\\\\mathrm{Ans}\",\n  \"42\": \"\\\\mathrm{A}\",\n  \"43\": \"\\\\mathrm{B}\",\n  \"44\": \"\\\\mathrm{C}\",\n  \"45\": \"\\\\mathrm{D}\",\n  \"46\": \"\\\\mathrm{E}\",\n  \"47\": \"\\\\mathrm{F}\",\n  \"48\": \"x\",\n  \"49\": \"y\",\n  \"4A\": \"\\\\mathrm{PreAns}\",\n  \"4B\": \"z\",\n  \"4C\": \"\\\\theta\",\n  \"4D\": \"\",\n  \"4E\": \"\",\n  \"4F\": \"\",\n  \"50\": \"\\\\Sigma(\",\n  \"51\": \"\\\\int(\",\n  \"52\": \"\\\\mathrm{d/d}x(\",\n  \"53\": \"\\\\prod(\",\n  \"54\": \"\",\n  \"55\": \"\",\n  \"56\": \"\",\n  \"57\": \"\",\n  \"58\": \"\\\\mathrm{Min}(\",\n  \"59\": \"\\\\mathrm{Max}(\",\n  \"5A\": \"\\\\mathrm{Mean}(\",\n  \"5B\": \"\\\\mathrm{Sum}(\",\n  \"5C\": \"\",\n  \"5D\": \"\",\n  \"5E\": \"\",\n  \"5F\": \"\",\n  \"60\": \"(\",\n  \"61\": \"\\\\mathrm{P}(\",\n  \"62\": \"\\\\mathrm{Q}(\",\n  \"63\": \"\\\\mathrm{R}(\",\n  \"64\": \"\\\\mathrm{Not}(\",\n  \"65\": \"\\\\mathrm{Neg}(\",\n  \"66\": \"\\\\mathrm{Conjg}(\",\n  \"67\": \"\\\\mathrm{Arg}(\",\n  \"68\": \"\\\\mathrm{Abs}(\",\n  \"69\": \"\\\\mathrm{Rnd}(\",\n  \"6A\": \"\\\\mathrm{Det}(\",\n  \"6B\": \"\\\\mathrm{Trn}(\",\n  \"6C\": \"\\\\sinh(\",\n  \"6D\": \"\\\\cosh(\",\n  \"6E\": \"\\\\tanh(\",\n  \"6F\": \"\\\\sinh^{-1}(\",\n  \"70\": \"\\\\cosh^{-1}(\",\n  \"71\": \"\\\\tanh^{-1}(\",\n  \"72\": \"e^(\",\n  \"73\": \"10^(\",\n  \"74\": \"\\\\sqrt(\",\n  \"75\": \"\\\\ln(\",\n  \"76\": \"\\\\sqrt[3](\",\n  \"77\": \"\\\\sin(\",\n  \"78\": \"\\\\cos(\",\n  \"79\": \"\\\\tan(\",\n  \"7A\": \"\\\\sin^{-1}(\",\n  \"7B\": \"\\\\cos^{-1}(\",\n  \"7C\": \"\\\\tan^{-1}(\",\n  \"7D\": \"\\\\log(\",\n  \"7E\": \"\\\\mathrm{Pol}(\",\n  \"7F\": \"\\\\mathrm{Rec}(\",\n  \"80\": \"\",\n  \"81\": \"\",\n  \"82\": \"\",\n  \"83\": \"\\\\mathrm{Int}(\",\n  \"84\": \"\\\\mathrm{Intg}(\",\n  \"85\": \"\\\\mathrm{Ref}(\",\n  \"86\": \"\\\\mathrm{Rref}(\",\n  \"87\": \"\\\\mathrm{RanInt\\\\#}(\",\n  \"88\": \"\\\\mathrm{GCD}(\",\n  \"89\": \"\\\\mathrm{LCM}(\",\n  \"8A\": \"\\\\mathrm{RndFix}(\",\n  \"8B\": \"\",\n  \"8C\": \"\",\n  \"8D\": \"\",\n  \"8E\": \"\",\n  \"8F\": \"\\\\mathrm{ReP}(\",\n  \"90\": \"\\\\mathrm{ImP}(\",\n  \"91\": \"\\\\mathrm{Identity}(\",\n  \"92\": \"\\\\mathrm{UintV}(\",\n  \"93\": \"\\\\mathrm{Angle}(\",\n  \"94\": \"\",\n  \"95\": \"\",\n  \"96\": \"\",\n  \"97\": \"\",\n  \"98\": \"\",\n  \"99\": \"\",\n  \"9A\": \"\",\n  \"9B\": \"\",\n  \"9C\": \"\",\n  \"9D\": \"\",\n  \"9E\": \"\",\n  \"9F\": \"\",\n  \"A0\": \"\\\\mathrm{or}(\",\n  \"A1\": \"\\\\mathrm{xor}(\",\n  \"A2\": \"\\\\mathrm{xnor}(\",\n  \"A3\": \"\\\\mathrm{and}(\",\n  \"A4\": \"\",\n  \"A5\": \"=\",\n  \"A6\": \"+\",\n  \"A7\": \"-\",\n  \"A8\": \"\\\\times\",\n  \"A9\": \"\\\\div\",\n  \"AA\": \"\\\\div \\\\mathrm{R}\",\n  \"AB\": \"\\\\cdot\",\n  \"AC\": \"\\\\angle\",\n  \"AD\": \"\\\\textbf{P}\",\n  \"AE\": \"\\\\textbf{C}\",\n  \"AF\": \"\",\n  \"B0\": \"\",\n  \"B1\": \"\",\n  \"B2\": \"\",\n  \"B3\": \"\",\n  \"B4\": \"\",\n  \"B5\": \"\",\n  \"B6\": \"\",\n  \"B7\": \"\",\n  \"B8\": \"\\\\hat{x}\",\n  \"B9\": \"\\\\hat{y}\",\n  \"BA\": \"\\\\hat{x}_1\",\n  \"BB\": \"\\\\hat{x}_2\",\n  \"BC\": \"\",\n  \"BD\": \"\",\n  \"BE\": \"\",\n  \"BF\": \"\",\n  \"C0\": \"-\",\n  \"C1\": \"\\\\mathrm{b}\",\n  \"C2\": \"\\\\mathrm{o}\",\n  \"C3\": \"\\\\mathrm{d}\",\n  \"C4\": \"\\\\mathrm{h}\",\n  \"C5\": \"\",\n  \"C6\": \"\",\n  \"C7\": \"\",\n  \"C8\": \"⌟\",\n  \"C9\": \"^(\",\n  \"CA\": \"\\\\sqrt[x](\",\n  \"CB\": \"\",\n  \"CC\": \"\",\n  \"CD\": \"\",\n  \"CE\": \"\",\n  \"CF\": \"\",\n  \"D0\": \")\",\n  \"D1\": \"\\\\blacktriangleright \\\\mathrm{t}\",\n  \"D2\": \"\\\\blacktriangleright \\\\mathrm{a+b}i\",\n  \"D3\": \"\\\\blacktriangleright \\\\mathrm{r} \\\\angle \\\\theta\",\n  \"D4\": \"^{-1}\",\n  \"D5\": \"^2\",\n  \"D6\": \"^3\",\n  \"D7\": \"\\\\%\",\n  \"D8\": \"!\",\n  \"D9\": \"^{\\\\circ}\",\n  \"DA\": \"^{\\\\mathrm{r}}\",\n  \"DB\": \"^{\\\\mathrm{g}}\",\n  \"DC\": \"^{▫}\",\n  \"DD\": \"\\\\textbf{E}\",\n  \"DE\": \"\\\\textbf{P}\",\n  \"DF\": \"\\\\textbf{T}\",\n  \"E0\": \"\\\\textbf{G}\",\n  \"E1\": \"\\\\textbf{M}\",\n  \"E2\": \"\\\\textbf{k}\",\n  \"E3\": \"\\\\textbf{m}\",\n  \"E4\": \"\\\\textbf{μ}\",\n  \"E5\": \"\\\\textbf{n}\",\n  \"E6\": \"\\\\textbf{p}\",\n  \"E7\": \"\\\\textbf{f}\",\n  \"E8\": \"\",\n  \"E9\": \"\\\\blacktriangleright \\\\mathrm{Simp}\",\n  \"EA\": \"\",\n  \"EB\": \"\",\n  \"EC\": \"\",\n  \"ED\": \"\",\n  \"EE\": \"\",\n  \"EF\": \"\",\n  \"F0\": \"\",\n  \"F1\": \"\",\n  \"F2\": \"\",\n  \"F3\": \"\",\n  \"F4\": \"\",\n  \"F5\": \"\",\n  \"F6\": \"\",\n  \"F7\": \"\",\n  \"F8\": \"\",\n  \"F9\": \"\",\n  \"FA\": \"\",\n  \"FB\": \"\",\n  \"FC\": \"\",\n  \"FD\": \"\",\n  \"FE\": \"\",\n  \"FF\": \"\"\n}","export const ascii00_EY = {\n  \"40\": \"\\\\mathrm{Ans}\",\n  \"41\": \"\\\\mathrm{A}\",\n  \"42\": \"\\\\mathrm{B}\",\n  \"43\": \"\\\\mathrm{C}\",\n  \"44\": \"\\\\mathrm{D}\",\n  \"45\": \"\\\\mathrm{E}\",\n  \"46\": \"\\\\mathrm{F}\",\n  \"47\": \"x\",\n  \"48\": \"y\",\n  \"49\": \"z\",\n  \"4A\": \"\\\\mathrm{PreAns}\",\n  \"4B\": \"\\\\theta\",\n  \"4C\": \" \",\n  \"95\": \"f(\",\n  \"96\": \"g(\",\n}","export const asciiFA = {\n  \"00\": \"\",\n  \"01\": \"\\\\mathrm{ch▸yd}\",\n  \"02\": \"\\\\mathrm{yd▸ch}\",\n  \"03\": \"\\\\mathrm{ch▸mile}\",\n  \"04\": \"\\\\mathrm{mile▸ch}\",\n  \"05\": \"\\\\mathrm{mil▸in}\",\n  \"06\": \"\\\\mathrm{in▸mil}\",\n  \"07\": \"\\\\mathrm{fath▸in}\",\n  \"08\": \"\\\\mathrm{in▸fath}\",\n  \"09\": \"\\\\mathrm{fath▸ft}\",\n  \"0A\": \"\\\\mathrm{ft▸fath}\",\n  \"0B\": \"\\\\mathrm{fath▸yd}\",\n  \"0C\": \"\\\\mathrm{yd▸fath}\",\n  \"0D\": \"\\\\mathrm{ha▸a}\",\n  \"0E\": \"\\\\mathrm{a▸ha}\",\n  \"0F\": \"\\\\mathrm{mile²▸acre}\",\n  \"10\": \"\\\\mathrm{acre▸mile²}\",\n  \"11\": \"\\\\mathrm{bu▸gal(UK)}\",\n  \"12\": \"\\\\mathrm{gal(UK)▸bu}\",\n  \"13\": \"\\\\mathrm{lb▸oz}\",\n  \"14\": \"\\\\mathrm{oz▸lb}\",\n  \"15\": \"\\\\mathrm{ton(long)▸oz}\",\n  \"16\": \"\\\\mathrm{oz▸ton(long)}\",\n  \"17\": \"\\\\mathrm{ton(long)▸lb}\",\n  \"18\": \"\\\\mathrm{lb▸ton(long)}\",\n  \"19\": \"\\\\mathrm{ton(short) ▸oz}\",\n  \"1A\": \"\\\\mathrm{oz▸ton(short)}\",\n  \"1B\": \"\\\\mathrm{ton(short)▸lb}\",\n  \"1C\": \"\\\\mathrm{lb▸ton(short)}\",\n  \"1D\": \"\\\\mathrm{寸▸尺}\",\n  \"1E\": \"\\\\mathrm{尺▸寸}\",\n  \"1F\": \"\\\\mathrm{間▸尺}\",\n  \"20\": \"\\\\mathrm{尺▸間}\",\n  \"21\": \"\\\\mathrm{町▸尺}\",\n  \"22\": \"\\\\mathrm{尺▸町}\",\n  \"23\": \"\\\\mathrm{町▸間}\",\n  \"24\": \"\\\\mathrm{間▸町}\",\n  \"25\": \"\\\\mathrm{里▸間}\",\n  \"26\": \"\\\\mathrm{間▸里}\",\n  \"27\": \"\\\\mathrm{里▸町}\",\n  \"28\": \"\\\\mathrm{町▸里}\",\n  \"29\": \"\\\\mathrm{海里▸尺}\",\n  \"2A\": \"\\\\mathrm{尺▸海里}\",\n  \"2B\": \"\\\\mathrm{丈▸尺}\",\n  \"2C\": \"\\\\mathrm{尺▸丈}\",\n  \"2D\": \"\\\\mathrm{畝▸坪}\",\n  \"2E\": \"\\\\mathrm{坪▸畝}\",\n  \"2F\": \"\\\\mathrm{反▸畝}\",\n  \"30\": \"\\\\mathrm{畝▸反}\",\n  \"31\": \"\\\\mathrm{町▸反}\",\n  \"32\": \"\\\\mathrm{反▸町}\",\n  \"33\": \"\\\\mathrm{合▸升}\",\n  \"34\": \"\\\\mathrm{升▸合}\",\n  \"35\": \"\\\\mathrm{斗▸升}\",\n  \"36\": \"\\\\mathrm{升▸斗}\",\n  \"37\": \"\\\\mathrm{石▸斗}\",\n  \"38\": \"\\\\mathrm{斗▸石}\",\n  \"39\": \"\\\\mathrm{勺▸合}\",\n  \"3A\": \"\\\\mathrm{合▸勺}\",\n  \"3B\": \"\\\\mathrm{匁▸貫}\",\n  \"3C\": \"\\\\mathrm{貫▸匁}\",\n  \"3D\": \"\\\\mathrm{斤▸貫}\",\n  \"3E\": \"\\\\mathrm{貫▸斤}\",\n  \"3F\": \"\\\\mathrm{斤▸匁}\",\n  \"40\": \"\",\n  \"41\": \"\",\n  \"42\": \"\",\n  \"43\": \"\",\n  \"44\": \"\",\n  \"45\": \"\",\n  \"46\": \"\",\n  \"47\": \"\",\n  \"48\": \"\",\n  \"49\": \"\",\n  \"4A\": \"\",\n  \"4B\": \"\",\n  \"4C\": \"\",\n  \"4D\": \"\",\n  \"4E\": \"\",\n  \"4F\": \"\",\n  \"50\": \"\",\n  \"51\": \"\",\n  \"52\": \"\",\n  \"53\": \"\",\n  \"54\": \"\",\n  \"55\": \"\",\n  \"56\": \"\",\n  \"57\": \"\",\n  \"58\": \"\",\n  \"59\": \"\",\n  \"5A\": \"\",\n  \"5B\": \"\",\n  \"5C\": \"\",\n  \"5D\": \"\",\n  \"5E\": \"\",\n  \"5F\": \"\",\n  \"60\": \"\",\n  \"61\": \"\",\n  \"62\": \"\",\n  \"63\": \"\",\n  \"64\": \"\",\n  \"65\": \"\",\n  \"66\": \"\",\n  \"67\": \"\",\n  \"68\": \"\",\n  \"69\": \"\",\n  \"6A\": \"\",\n  \"6B\": \"\",\n  \"6C\": \"\",\n  \"6D\": \"\",\n  \"6E\": \"\",\n  \"6F\": \"\",\n  \"70\": \"\",\n  \"71\": \"\",\n  \"72\": \"\",\n  \"73\": \"\",\n  \"74\": \"\",\n  \"75\": \"\",\n  \"76\": \"\",\n  \"77\": \"\",\n  \"78\": \"\",\n  \"79\": \"\",\n  \"7A\": \"\",\n  \"7B\": \"\",\n  \"7C\": \"\",\n  \"7D\": \"\",\n  \"7E\": \"\",\n  \"7F\": \"\",\n  \"80\": \"\",\n  \"81\": \"\",\n  \"82\": \"\",\n  \"83\": \"\",\n  \"84\": \"\",\n  \"85\": \"\",\n  \"86\": \"\",\n  \"87\": \"\",\n  \"88\": \"\",\n  \"89\": \"\",\n  \"8A\": \"\",\n  \"8B\": \"\",\n  \"8C\": \"\",\n  \"8D\": \"\",\n  \"8E\": \"\",\n  \"8F\": \"\",\n  \"90\": \"\",\n  \"91\": \"\",\n  \"92\": \"\",\n  \"93\": \"\",\n  \"94\": \"\",\n  \"95\": \"\",\n  \"96\": \"\",\n  \"97\": \"\",\n  \"98\": \"\",\n  \"99\": \"\",\n  \"9A\": \"\",\n  \"9B\": \"\",\n  \"9C\": \"\",\n  \"9D\": \"\",\n  \"9E\": \"\",\n  \"9F\": \"\",\n  \"A0\": \"\",\n  \"A1\": \"\",\n  \"A2\": \"\",\n  \"A3\": \"\",\n  \"A4\": \"\",\n  \"A5\": \"\",\n  \"A6\": \"\",\n  \"A7\": \"\",\n  \"A8\": \"\",\n  \"A9\": \"\",\n  \"AA\": \"\",\n  \"AB\": \"\",\n  \"AC\": \"\",\n  \"AD\": \"\",\n  \"AE\": \"\",\n  \"AF\": \"\",\n  \"B0\": \"\",\n  \"B1\": \"\",\n  \"B2\": \"\",\n  \"B3\": \"\",\n  \"B4\": \"\",\n  \"B5\": \"\",\n  \"B6\": \"\",\n  \"B7\": \"\",\n  \"B8\": \"\",\n  \"B9\": \"\",\n  \"BA\": \"\",\n  \"BB\": \"\",\n  \"BC\": \"\",\n  \"BD\": \"\",\n  \"BE\": \"\",\n  \"BF\": \"\",\n  \"C0\": \"\",\n  \"C1\": \"\",\n  \"C2\": \"\",\n  \"C3\": \"\",\n  \"C4\": \"\",\n  \"C5\": \"\",\n  \"C6\": \"\",\n  \"C7\": \"\",\n  \"C8\": \"\",\n  \"C9\": \"\",\n  \"CA\": \"\",\n  \"CB\": \"\",\n  \"CC\": \"\",\n  \"CD\": \"\",\n  \"CE\": \"\",\n  \"CF\": \"\",\n  \"D0\": \"\",\n  \"D1\": \"\",\n  \"D2\": \"\",\n  \"D3\": \"\",\n  \"D4\": \"\",\n  \"D5\": \"\",\n  \"D6\": \"\",\n  \"D7\": \"\",\n  \"D8\": \"\",\n  \"D9\": \"\",\n  \"DA\": \"\",\n  \"DB\": \"\",\n  \"DC\": \"\",\n  \"DD\": \"\",\n  \"DE\": \"\",\n  \"DF\": \"\",\n  \"E0\": \"\",\n  \"E1\": \"\",\n  \"E2\": \"\",\n  \"E3\": \"\",\n  \"E4\": \"\",\n  \"E5\": \"\",\n  \"E6\": \"\",\n  \"E7\": \"\",\n  \"E8\": \"\",\n  \"E9\": \"\",\n  \"EA\": \"\",\n  \"EB\": \"\",\n  \"EC\": \"\",\n  \"ED\": \"\",\n  \"EE\": \"\",\n  \"EF\": \"\",\n  \"F0\": \"\",\n  \"F1\": \"\",\n  \"F2\": \"\",\n  \"F3\": \"\",\n  \"F4\": \"\",\n  \"F5\": \"\",\n  \"F6\": \"\",\n  \"F7\": \"\",\n  \"F8\": \"\",\n  \"F9\": \"\",\n  \"FA\": \"\",\n  \"FB\": \"\",\n  \"FC\": \"\",\n  \"FD\": \"\",\n  \"FE\": \"\",\n  \"FF\": \"\"\n}","export const asciiFB = {\n  \"00\": \"\",\n  \"01\": \"<\",\n  \"02\": \">\",\n  \"03\": \"≠\",\n  \"04\": \"≤\",\n  \"05\": \"≥\",\n  \"06\": \"\",\n  \"07\": \"\",\n  \"08\": \"\",\n  \"09\": \"\",\n  \"0A\": \"\",\n  \"0B\": \"\",\n  \"0C\": \"\",\n  \"0D\": \"\",\n  \"0E\": \"\",\n  \"0F\": \"\",\n  \"10\": \"\\\\to \\\\mathrm{M}\",\n  \"11\": \"\",\n  \"12\": \"\\\\to \\\\mathrm{A}\",\n  \"13\": \"\\\\to \\\\mathrm{B}\",\n  \"14\": \"\\\\to \\\\mathrm{C}\",\n  \"15\": \"\\\\to \\\\mathrm{D}\",\n  \"16\": \"\\\\to \\\\mathrm{E}\",\n  \"17\": \"\\\\to \\\\mathrm{F}\",\n  \"18\": \"\\\\to x\",\n  \"19\": \"\\\\to y\",\n  \"1A\": \"\\\\mathrm{M+}\",\n  \"1B\": \"\\\\mathrm{M-}\",\n  \"1C\": \"\\\\to z\",\n  \"1D\": \"\",\n  \"1E\": \"\",\n  \"1F\": \"\",\n  \"20\": \"\\\\mathrm{MatA}\",\n  \"21\": \"\\\\mathrm{MatB}\",\n  \"22\": \"\\\\mathrm{MatC}\",\n  \"23\": \"\\\\mathrm{MatD}\",\n  \"24\": \"\\\\mathrm{MatAns}\",\n  \"25\": \"\\\\mathrm{VctA}\",\n  \"26\": \"\\\\mathrm{VctB}\",\n  \"27\": \"\\\\mathrm{VctC}\",\n  \"28\": \"\\\\mathrm{VctD}\",\n  \"29\": \"\\\\mathrm{VctAns}\",\n  \"2A\": \"\",\n  \"2B\": \"\",\n  \"2C\": \"\",\n  \"2D\": \"\",\n  \"2E\": \"\",\n  \"2F\": \"\",\n  \"30\": \"\",\n  \"31\": \"\",\n  \"32\": \"\",\n  \"33\": \"\",\n  \"34\": \"\",\n  \"35\": \"\",\n  \"36\": \"\",\n  \"37\": \"\",\n  \"38\": \"\",\n  \"39\": \"\",\n  \"3A\": \"\",\n  \"3B\": \"\",\n  \"3C\": \"\",\n  \"3D\": \"\",\n  \"3E\": \"\",\n  \"3F\": \"\",\n  \"40\": \"\",\n  \"41\": \"\",\n  \"42\": \"\",\n  \"43\": \"\",\n  \"44\": \"\",\n  \"45\": \"\",\n  \"46\": \"\",\n  \"47\": \"\",\n  \"48\": \"\",\n  \"49\": \"\",\n  \"4A\": \"\",\n  \"4B\": \"\",\n  \"4C\": \"\",\n  \"4D\": \"\",\n  \"4E\": \"\",\n  \"4F\": \"\",\n  \"50\": \"\",\n  \"51\": \"\",\n  \"52\": \"\",\n  \"53\": \"\",\n  \"54\": \"\",\n  \"55\": \"\",\n  \"56\": \"\",\n  \"57\": \"\",\n  \"58\": \"\",\n  \"59\": \"\",\n  \"5A\": \"\",\n  \"5B\": \"\",\n  \"5C\": \"\",\n  \"5D\": \"\",\n  \"5E\": \"\",\n  \"5F\": \"\",\n  \"60\": \"\",\n  \"61\": \"\",\n  \"62\": \"\",\n  \"63\": \"\",\n  \"64\": \"\",\n  \"65\": \"\",\n  \"66\": \"\",\n  \"67\": \"\",\n  \"68\": \"\",\n  \"69\": \"\",\n  \"6A\": \"\",\n  \"6B\": \"\",\n  \"6C\": \"\",\n  \"6D\": \"\",\n  \"6E\": \"\",\n  \"6F\": \"\",\n  \"70\": \"\",\n  \"71\": \"\",\n  \"72\": \"\",\n  \"73\": \"\",\n  \"74\": \"\",\n  \"75\": \"\",\n  \"76\": \"\",\n  \"77\": \"\",\n  \"78\": \"\",\n  \"79\": \"\",\n  \"7A\": \"\",\n  \"7B\": \"\",\n  \"7C\": \"\",\n  \"7D\": \"\",\n  \"7E\": \"\",\n  \"7F\": \"\",\n  \"80\": \"\",\n  \"81\": \"\",\n  \"82\": \"\",\n  \"83\": \"\",\n  \"84\": \"\",\n  \"85\": \"\",\n  \"86\": \"\",\n  \"87\": \"\",\n  \"88\": \"\",\n  \"89\": \"\",\n  \"8A\": \"\",\n  \"8B\": \"\",\n  \"8C\": \"\",\n  \"8D\": \"\",\n  \"8E\": \"\",\n  \"8F\": \"\",\n  \"90\": \"\",\n  \"91\": \"\",\n  \"92\": \"\",\n  \"93\": \"\",\n  \"94\": \"\",\n  \"95\": \"\",\n  \"96\": \"\",\n  \"97\": \"\",\n  \"98\": \"\",\n  \"99\": \"\",\n  \"9A\": \"\",\n  \"9B\": \"\",\n  \"9C\": \"\",\n  \"9D\": \"\",\n  \"9E\": \"\",\n  \"9F\": \"\",\n  \"A0\": \"\",\n  \"A1\": \"\",\n  \"A2\": \"\",\n  \"A3\": \"\",\n  \"A4\": \"\",\n  \"A5\": \"\",\n  \"A6\": \"\",\n  \"A7\": \"\",\n  \"A8\": \"\",\n  \"A9\": \"\",\n  \"AA\": \"\",\n  \"AB\": \"\",\n  \"AC\": \"\",\n  \"AD\": \"\",\n  \"AE\": \"\",\n  \"AF\": \"\",\n  \"B0\": \"\",\n  \"B1\": \"\",\n  \"B2\": \"\",\n  \"B3\": \"\",\n  \"B4\": \"\",\n  \"B5\": \"\",\n  \"B6\": \"\",\n  \"B7\": \"\",\n  \"B8\": \"\",\n  \"B9\": \"\",\n  \"BA\": \"\",\n  \"BB\": \"\",\n  \"BC\": \"\",\n  \"BD\": \"\",\n  \"BE\": \"\",\n  \"BF\": \"\",\n  \"C0\": \"\",\n  \"C1\": \"\",\n  \"C2\": \"\",\n  \"C3\": \"\",\n  \"C4\": \"\",\n  \"C5\": \"\",\n  \"C6\": \"\",\n  \"C7\": \"\",\n  \"C8\": \"\",\n  \"C9\": \"\",\n  \"CA\": \"\",\n  \"CB\": \"\",\n  \"CC\": \"\",\n  \"CD\": \"\",\n  \"CE\": \"\",\n  \"CF\": \"\",\n  \"D0\": \"\",\n  \"D1\": \"\",\n  \"D2\": \"\",\n  \"D3\": \"\",\n  \"D4\": \"\",\n  \"D5\": \"\",\n  \"D6\": \"\",\n  \"D7\": \"\",\n  \"D8\": \"\",\n  \"D9\": \"\",\n  \"DA\": \"\",\n  \"DB\": \"\",\n  \"DC\": \"\",\n  \"DD\": \"\",\n  \"DE\": \"\",\n  \"DF\": \"\",\n  \"E0\": \"\",\n  \"E1\": \"\",\n  \"E2\": \"\",\n  \"E3\": \"\",\n  \"E4\": \"\",\n  \"E5\": \"\",\n  \"E6\": \"\",\n  \"E7\": \"\",\n  \"E8\": \"\",\n  \"E9\": \"\",\n  \"EA\": \"\",\n  \"EB\": \"\",\n  \"EC\": \"\",\n  \"ED\": \"\",\n  \"EE\": \"\",\n  \"EF\": \"\",\n  \"F0\": \"\",\n  \"F1\": \"\",\n  \"F2\": \"\",\n  \"F3\": \"\",\n  \"F4\": \"\",\n  \"F5\": \"\",\n  \"F6\": \"\",\n  \"F7\": \"\",\n  \"F8\": \"\",\n  \"F9\": \"\",\n  \"FA\": \"\",\n  \"FB\": \"\",\n  \"FC\": \"\",\n  \"FD\": \"\",\n  \"FE\": \"\",\n  \"FF\": \"\"\n}","export const asciiFB_EY = {\n  \"10\": \"\\\\to \\\\mathrm{M}\",\n  \"11\": \"\\\\to \\\\mathrm{A}\",\n  \"12\": \"\\\\to \\\\mathrm{B}\",\n  \"13\": \"\\\\to \\\\mathrm{C}\",\n  \"14\": \"\\\\to \\\\mathrm{D}\",\n  \"15\": \"\\\\to \\\\mathrm{E}\",\n  \"16\": \"\\\\to \\\\mathrm{F}\",\n  \"17\": \"\\\\to x\",\n  \"18\": \"\\\\to y\",\n  \"19\": \"\\\\to z\",\n  \"1A\": \"\\\\mathrm{M+}\",\n  \"1B\": \"\\\\mathrm{M-}\",\n  \"1C\": \" \"\n}","export const asciiFD = {\n  \"00\": \"\",\n  \"01\": \"\\\\Sigma \\\\mathrm{x}^2\",\n  \"02\": \"\\\\Sigma \\\\mathrm{x}\",\n  \"03\": \"\\\\mathrm{n}\",\n  \"04\": \"\\\\Sigma \\\\mathrm{y}^2\",\n  \"05\": \"\\\\Sigma \\\\mathrm{y}\",\n  \"06\": \"\\\\Sigma \\\\mathrm{xy}\",\n  \"07\": \"\\\\Sigma \\\\mathrm{x}^3\",\n  \"08\": \"\\\\Sigma \\\\mathrm{x}^2\\\\mathrm{y}\",\n  \"09\": \"\\\\Sigma \\\\mathrm{x}^4\",\n  \"0A\": \"\\\\mathrm{min(x)}\",\n  \"0B\": \"\\\\mathrm{max(x)}\",\n  \"0C\": \"\\\\mathrm{min(y)}\",\n  \"0D\": \"\\\\mathrm{max(y)}\",\n  \"0E\": \"\\\\mathrm{\\\\overline{x}}\",\n  \"0F\": \"\\\\mathrm{\\\\overline{y}}\",\n  \"10\": \"\\\\mathrm{a}\",\n  \"11\": \"\\\\mathrm{b}\",\n  \"12\": \"\\\\mathrm{c}\",\n  \"13\": \"\\\\mathrm{r}\",\n  \"14\": \"\\\\mathrm{𝜎x}\",\n  \"15\": \"\\\\mathrm{sx}\",\n  \"16\": \"\\\\mathrm{𝜎y}\",\n  \"17\": \"\\\\mathrm{sy}\",\n  \"18\": \"\\\\mathrm{Ran\\\\#}\",\n  \"19\": \"\\\\mathrm{Q_1}\",\n  \"1A\": \"\\\\mathrm{Q_3}\",\n  \"1B\": \"\\\\mathrm{Med}\",\n  \"1C\": \"\\\\mathrm{𝜎^2x}\",\n  \"1D\": \"\\\\mathrm{s^2x}\",\n  \"1E\": \"\\\\mathrm{𝜎^2y}\",\n  \"1F\": \"\\\\mathrm{s^2y}\",\n  \"20\": \"\\\\mathrm{an}\",\n  \"21\": \"\\\\mathrm{n}\",\n  \"22\": \"\",\n  \"23\": \"\",\n  \"24\": \"\",\n  \"25\": \"\",\n  \"26\": \"\",\n  \"27\": \"\",\n  \"28\": \"\",\n  \"29\": \"\",\n  \"2A\": \"\",\n  \"2B\": \"\",\n  \"2C\": \"\",\n  \"2D\": \"\",\n  \"2E\": \"\",\n  \"2F\": \"\\\\mathrm{AtWt\\\\ }\",\n  \"30\": \"{m}_{\\\\rm{p}}\",\n  \"31\": \"{m}_{\\\\rm{n}}\",\n  \"32\": \"{m}_{\\\\rm{e}}\",\n  \"33\": \"{m}_{\\\\rm{\\\\mu}}\",\n  \"34\": \"{a}_{0}\",\n  \"35\": \"{h}\",\n  \"36\": \"\\\\mu_{\\\\rm{N}}\",\n  \"37\": \"\\\\mu_{\\\\rm{B}}\",\n  \"38\": \"\\\\hbar\",\n  \"39\": \"\\\\alpha\",\n  \"3A\": \"{r}_{\\\\rm{e}}\",\n  \"3B\": \"\\\\lambda_{\\\\rm{C}}\",\n  \"3C\": \"γ_{p}\",\n  \"3D\": \"\\\\lambda_{\\\\rm{Cp}}\",\n  \"3E\": \"\\\\lambda_{\\\\rm{Cn}}\",\n  \"3F\": \"{R}_{\\\\infty}\",\n  \"40\": \"{u}\",\n  \"41\": \"\\\\mu_{\\\\rm{p}}\",\n  \"42\": \"\\\\mu_{\\\\rm{e}}\",\n  \"43\": \"\\\\mu_{\\\\rm{n}}\",\n  \"44\": \"\\\\mu_{\\\\rm{\\\\mu}}\",\n  \"45\": \"{F}\",\n  \"46\": \"{e}\",\n  \"47\": \"{N}_{\\\\rm{A}}\",\n  \"48\": \"{k}\",\n  \"49\": \"{V}_{\\\\rm{m}}\",\n  \"4A\": \"{R}\",\n  \"4B\": \"{c}_{0}\",\n  \"4C\": \"{c}_{1}\",\n  \"4D\": \"{c}_{2}\",\n  \"4E\": \"\\\\sigma\",\n  \"4F\": \"\\\\epsilon_{0}\",\n  \"50\": \"\\\\mu_{0}\",\n  \"51\": \"\\\\phi_{0}\",\n  \"52\": \"{g}\",\n  \"53\": \"{G}_{0}\",\n  \"54\": \"{Z}_{0}\",\n  \"55\": \"{t}\",\n  \"56\": \"{G}\",\n  \"57\": \"\\\\rm{atm}\",\n  \"58\": \"{l}_{\\\\rm{P}}\",\n  \"59\": \"{t}_{\\\\rm{P}}\",\n  \"5A\": \"{K}_{\\\\rm{J}}\",\n  \"5B\": \"{R}_{\\\\rm{K}}\",\n  \"5C\": \"{m}_{\\\\rm{\\\\tau}}\",\n  \"5D\": \"{R}_{\\\\rm{K-90}}\",\n  \"5E\": \"{K}_{\\\\rm{J-90}}\",\n  \"5F\": \"\",\n  \"60\": \"\",\n  \"61\": \"\",\n  \"62\": \"\",\n  \"63\": \"\",\n  \"64\": \"\",\n  \"65\": \"\",\n  \"66\": \"\",\n  \"67\": \"\",\n  \"68\": \"\",\n  \"69\": \"\",\n  \"6A\": \"\",\n  \"6B\": \"\",\n  \"6C\": \"\",\n  \"6D\": \"\",\n  \"6E\": \"\",\n  \"6F\": \"\",\n  \"70\": \"\",\n  \"71\": \"\",\n  \"72\": \"\",\n  \"73\": \"\",\n  \"74\": \"\",\n  \"75\": \"\",\n  \"76\": \"\",\n  \"77\": \"\",\n  \"78\": \"\",\n  \"79\": \"\",\n  \"7A\": \"\",\n  \"7B\": \"\",\n  \"7C\": \"\",\n  \"7D\": \"\",\n  \"7E\": \"\",\n  \"7F\": \"\",\n  \"80\": \"\",\n  \"81\": \"\",\n  \"82\": \"\",\n  \"83\": \"\",\n  \"84\": \"\",\n  \"85\": \"\",\n  \"86\": \"\",\n  \"87\": \"\",\n  \"88\": \"\",\n  \"89\": \"\",\n  \"8A\": \"\",\n  \"8B\": \"\",\n  \"8C\": \"\",\n  \"8D\": \"\",\n  \"8E\": \"\",\n  \"8F\": \"\",\n  \"90\": \"\",\n  \"91\": \"\",\n  \"92\": \"\",\n  \"93\": \"\",\n  \"94\": \"\",\n  \"95\": \"\",\n  \"96\": \"\",\n  \"97\": \"\",\n  \"98\": \"\",\n  \"99\": \"\",\n  \"9A\": \"\",\n  \"9B\": \"\",\n  \"9C\": \"\",\n  \"9D\": \"\",\n  \"9E\": \"\",\n  \"9F\": \"\",\n  \"A0\": \"\",\n  \"A1\": \"\",\n  \"A2\": \"\",\n  \"A3\": \"\",\n  \"A4\": \"\",\n  \"A5\": \"\",\n  \"A6\": \"\",\n  \"A7\": \"\",\n  \"A8\": \"\",\n  \"A9\": \"\",\n  \"AA\": \"\",\n  \"AB\": \"\",\n  \"AC\": \"\",\n  \"AD\": \"\",\n  \"AE\": \"\",\n  \"AF\": \"\",\n  \"B0\": \"\",\n  \"B1\": \"\",\n  \"B2\": \"\",\n  \"B3\": \"\",\n  \"B4\": \"\",\n  \"B5\": \"\",\n  \"B6\": \"\",\n  \"B7\": \"\",\n  \"B8\": \"\",\n  \"B9\": \"\",\n  \"BA\": \"\",\n  \"BB\": \"\",\n  \"BC\": \"\",\n  \"BD\": \"\",\n  \"BE\": \"\",\n  \"BF\": \"\",\n  \"C0\": \"\",\n  \"C1\": \"\",\n  \"C2\": \"\",\n  \"C3\": \"\",\n  \"C4\": \"\",\n  \"C5\": \"\",\n  \"C6\": \"\",\n  \"C7\": \"\",\n  \"C8\": \"\",\n  \"C9\": \"\",\n  \"CA\": \"\",\n  \"CB\": \"\",\n  \"CC\": \"\",\n  \"CD\": \"\",\n  \"CE\": \"\",\n  \"CF\": \"\",\n  \"D0\": \"\",\n  \"D1\": \"\",\n  \"D2\": \"\",\n  \"D3\": \"\",\n  \"D4\": \"\",\n  \"D5\": \"\",\n  \"D6\": \"\",\n  \"D7\": \"\",\n  \"D8\": \"\",\n  \"D9\": \"\",\n  \"DA\": \"\",\n  \"DB\": \"\",\n  \"DC\": \"\",\n  \"DD\": \"\",\n  \"DE\": \"\",\n  \"DF\": \"\",\n  \"E0\": \"\",\n  \"E1\": \"\",\n  \"E2\": \"\",\n  \"E3\": \"\",\n  \"E4\": \"\",\n  \"E5\": \"\",\n  \"E6\": \"\",\n  \"E7\": \"\",\n  \"E8\": \"\",\n  \"E9\": \"\",\n  \"EA\": \"\",\n  \"EB\": \"\",\n  \"EC\": \"\",\n  \"ED\": \"\",\n  \"EE\": \"\",\n  \"EF\": \"\",\n  \"F0\": \"\",\n  \"F1\": \"\",\n  \"F2\": \"\",\n  \"F3\": \"\",\n  \"F4\": \"\",\n  \"F5\": \"\",\n  \"F6\": \"\",\n  \"F7\": \"\",\n  \"F8\": \"\",\n  \"F9\": \"\",\n  \"FA\": \"\",\n  \"FB\": \"\",\n  \"FC\": \"\",\n  \"FD\": \"\",\n  \"FE\": \"\",\n  \"FF\": \"\"\n}","export const asciiFE = {\n  \"00\": \"\",\n  \"01\": \"\\\\mathrm{in▸cm}\",\n  \"02\": \"\\\\mathrm{cm▸in}\",\n  \"03\": \"\\\\mathrm{ft▸m}\",\n  \"04\": \"\\\\mathrm{m▸ft}\",\n  \"05\": \"\\\\mathrm{yd▸m}\",\n  \"06\": \"\\\\mathrm{m▸yd}\",\n  \"07\": \"\\\\mathrm{mile▸km}\",\n  \"08\": \"\\\\mathrm{km▸mile}\",\n  \"09\": \"\\\\mathrm{n\\\\ mile▸m}\",\n  \"0A\": \"\\\\mathrm{m▸n\\\\ mile}\",\n  \"0B\": \"\\\\mathrm{acre▸m^2}\",\n  \"0C\": \"\\\\mathrm{m^2▸acre}\",\n  \"0D\": \"\\\\mathrm{gal(US)▸L}\",\n  \"0E\": \"\\\\mathrm{L▸gal(US)}\",\n  \"0F\": \"\\\\mathrm{gal(UK)▸L}\",\n  \"10\": \"\\\\mathrm{L▸gal(UK)}\",\n  \"11\": \"\\\\mathrm{pc▸km}\",\n  \"12\": \"\\\\mathrm{km▸pc}\",\n  \"13\": \"\\\\mathrm{m/s▸km/h}\",\n  \"14\": \"\\\\mathrm{km/h▸m/s}\",\n  \"15\": \"\\\\mathrm{oz▸g}\",\n  \"16\": \"\\\\mathrm{g▸oz}\",\n  \"17\": \"\\\\mathrm{lb▸kg}\",\n  \"18\": \"\\\\mathrm{kg▸lb}\",\n  \"19\": \"\\\\mathrm{atm▸Pa}\",\n  \"1A\": \"\\\\mathrm{Pa▸atm}\",\n  \"1B\": \"\\\\mathrm{mmHg▸Pa}\",\n  \"1C\": \"\\\\mathrm{Pa▸mmHg}\",\n  \"1D\": \"\\\\mathrm{hp▸kW}\",\n  \"1E\": \"\\\\mathrm{kW▸hp}\",\n  \"1F\": \"\\\\mathrm{kgf/cm^2▸Pa}\",\n  \"20\": \"\\\\mathrm{Pa▸kgf/cm^2}\",\n  \"21\": \"\\\\mathrm{kgf\\\\cdot m▸J}\",\n  \"22\": \"\\\\mathrm{J▸kgf\\\\cdot m}\",\n  \"23\": \"\\\\mathrm{lbf/in^2▸kPa}\",\n  \"24\": \"\\\\mathrm{kPa▸lbf/in^2}\",\n  \"25\": \"\\\\mathrm{^{\\\\circ}C▸^{\\\\circ}F}\",\n  \"26\": \"\\\\mathrm{^{\\\\circ}F▸^{\\\\circ}C}\",\n  \"27\": \"\\\\mathrm{cal▸J}\",\n  \"28\": \"\\\\mathrm{J▸cal}\",\n  \"29\": \"\\\\mathrm{Å▸m}\",\n  \"2A\": \"\\\\mathrm{m▸Å}\",\n  \"2B\": \"\\\\mathrm{fm▸m}\",\n  \"2C\": \"\\\\mathrm{m▸fm}\",\n  \"2D\": \"\\\\mathrm{ch▸m}\",\n  \"2E\": \"\\\\mathrm{m▸ch}\",\n  \"2F\": \"\\\\mathrm{ua▸m}\",\n  \"30\": \"\\\\mathrm{m▸ua}\",\n  \"31\": \"\\\\mathrm{l.y.▸m}\",\n  \"32\": \"\\\\mathrm{m▸l.y.}\",\n  \"33\": \"\\\\mathrm{mil▸m}\",\n  \"34\": \"\\\\mathrm{m▸mil}\",\n  \"35\": \"\\\\mathrm{fath▸m}\",\n  \"36\": \"\\\\mathrm{m▸fath}\",\n  \"37\": \"\\\\mathrm{b▸m^2}\",\n  \"38\": \"\\\\mathrm{m^2▸b}\",\n  \"39\": \"\\\\mathrm{a▸m^2}\",\n  \"3A\": \"\\\\mathrm{m^2▸a}\",\n  \"3B\": \"\\\\mathrm{ha▸m^2}\",\n  \"3C\": \"\\\\mathrm{m^2▸ha}\",\n  \"3D\": \"\\\\mathrm{ft^2▸m^2}\",\n  \"3E\": \"\\\\mathrm{m^2▸ft^2}\",\n  \"3F\": \"\\\\mathrm{in^2▸cm^2}\",\n  \"40\": \"\\\\mathrm{cm^2▸in^2}\",\n  \"41\": \"\\\\mathrm{mile^2▸km^2}\",\n  \"42\": \"\\\\mathrm{km^2▸mile^2}\",\n  \"43\": \"\\\\mathrm{L▸m^3}\",\n  \"44\": \"\\\\mathrm{m^3▸L}\",\n  \"45\": \"\\\\mathrm{bu▸L}\",\n  \"46\": \"\\\\mathrm{L▸bu}\",\n  \"47\": \"\\\\mathrm{bbl▸L}\",\n  \"48\": \"\\\\mathrm{L▸bbl}\",\n  \"49\": \"\\\\mathrm{ton▸m^3}\",\n  \"4A\": \"\\\\mathrm{m^3▸ton}\",\n  \"4B\": \"\\\\mathrm{fl\\\\ oz(US)▸mL}\",\n  \"4C\": \"\\\\mathrm{mL▸fl\\\\ oz(US)}\",\n  \"4D\": \"\\\\mathrm{fl\\\\ oz(UK)▸mL}\",\n  \"4E\": \"\\\\mathrm{mL▸fl\\\\ oz(UK)}\",\n  \"4F\": \"\\\\mathrm{ft^3▸m^3}\",\n  \"50\": \"\\\\mathrm{m^3▸ft^3}\",\n  \"51\": \"\\\\mathrm{in^3▸m^3}\",\n  \"52\": \"\\\\mathrm{m^3▸in^3}\",\n  \"53\": \"\\\\mathrm{mton▸kg}\",\n  \"54\": \"\\\\mathrm{kg▸mton}\",\n  \"55\": \"\\\\mathrm{ton(long)▸kg}\",\n  \"56\": \"\\\\mathrm{kg▸ton(long)}\",\n  \"57\": \"\\\\mathrm{ton(short)▸kg}\",\n  \"58\": \"\\\\mathrm{kg▸ton(short)}\",\n  \"59\": \"\\\\mathrm{mcarat▸g}\",\n  \"5A\": \"\\\\mathrm{g▸mcarat}\",\n  \"5B\": \"\\\\mathrm{r▸rad}\",\n  \"5C\": \"\\\\mathrm{rad▸r}\",\n  \"5D\": \"\\\\mathrm{t-yr▸s}\",\n  \"5E\": \"\\\\mathrm{s▸t-yr}\",\n  \"5F\": \"\\\\mathrm{\\\\min▸s}\",\n  \"60\": \"\\\\mathrm{s▸\\\\min}\",\n  \"61\": \"\\\\mathrm{h▸s}\",\n  \"62\": \"\\\\mathrm{s▸h}\",\n  \"63\": \"\\\\mathrm{day▸s}\",\n  \"64\": \"\\\\mathrm{s▸day}\",\n  \"65\": \"\\\\mathrm{mile/h▸m/s}\",\n  \"66\": \"\\\\mathrm{m/s▸mile/h}\",\n  \"67\": \"\\\\mathrm{knot▸m/s}\",\n  \"68\": \"\\\\mathrm{m/s▸knot}\",\n  \"69\": \"\\\\mathrm{Gal▸m/s^2}\",\n  \"6A\": \"\\\\mathrm{m/s^2▸Gal}\",\n  \"6B\": \"\\\\mathrm{N\\\\cdot m▸dyn\\\\cdot cm}\",\n  \"6C\": \"\\\\mathrm{dyn\\\\cdot cm▸N\\\\cdot m}\",\n  \"6D\": \"\\\\mathrm{dyn▸N}\",\n  \"6E\": \"\\\\mathrm{N▸dyn}\",\n  \"6F\": \"\\\\mathrm{lbf▸N}\",\n  \"70\": \"\\\\mathrm{N▸lbf}\",\n  \"71\": \"\\\\mathrm{kgf▸N}\",\n  \"72\": \"\\\\mathrm{N▸kgf}\",\n  \"73\": \"\\\\mathrm{bar▸Pa}\",\n  \"74\": \"\\\\mathrm{Pa▸bar}\",\n  \"75\": \"\\\\mathrm{dyn/cm^2▸Pa}\",\n  \"76\": \"\\\\mathrm{Pa▸dyn/cm^2}\",\n  \"77\": \"\\\\mathrm{lbf/in^2▸Pa}\",\n  \"78\": \"\\\\mathrm{Pa▸lbf/in^2}\",\n  \"79\": \"\\\\mathrm{mmH_2O▸Pa}\",\n  \"7A\": \"\\\\mathrm{Pa▸mmH_2O}\",\n  \"7B\": \"\\\\mathrm{inHg▸Pa}\",\n  \"7C\": \"\\\\mathrm{Pa▸inHg}\",\n  \"7D\": \"\\\\mathrm{erg▸J}\",\n  \"7E\": \"\\\\mathrm{J▸erg}\",\n  \"7F\": \"\\\\mathrm{eV▸J}\",\n  \"80\": \"\\\\mathrm{J▸eV}\",\n  \"81\": \"\\\\mathrm{Btu▸J}\",\n  \"82\": \"\\\\mathrm{J▸Btu}\",\n  \"83\": \"\\\\mathrm{cal_{IT}▸J}\",\n  \"84\": \"\\\\mathrm{J▸cal_{IT}}\",\n  \"85\": \"\\\\mathrm{cal_{th}▸J}\",\n  \"86\": \"\\\\mathrm{J▸cal_{th}}\",\n  \"87\": \"\\\\mathrm{kW\\\\cdot h▸J}\",\n  \"88\": \"\\\\mathrm{J▸kW\\\\cdot h}\",\n  \"89\": \"\\\\mathrm{Btu/\\\\min▸W}\",\n  \"8A\": \"\\\\mathrm{W▸Btu/\\\\min}\",\n  \"8B\": \"\\\\mathrm{cal_{th}/(g\\\\cdot K)▸J/(kg\\\\cdot K)}\",\n  \"8C\": \"\\\\mathrm{J/(kg\\\\cdot K)▸cal_{th}/(g\\\\cdot K)}\",\n  \"8D\": \"\\\\mathrm{P▸Pa\\\\cdot s}\",\n  \"8E\": \"\\\\mathrm{Pa\\\\cdot s▸P}\",\n  \"8F\": \"\\\\mathrm{St▸m^2/s}\",\n  \"90\": \"\\\\mathrm{m^2/s▸St}\",\n  \"91\": \"\\\\mathrm{G▸T}\",\n  \"92\": \"\\\\mathrm{T▸G}\",\n  \"93\": \"\\\\mathrm{Oe▸A/m}\",\n  \"94\": \"\\\\mathrm{A/m▸Oe}\",\n  \"95\": \"\\\\mathrm{Mx▸Wb}\",\n  \"96\": \"\\\\mathrm{Wb▸Mx}\",\n  \"97\": \"\\\\mathrm{γ▸T}\",\n  \"98\": \"\\\\mathrm{T▸γ}\",\n  \"99\": \"\\\\mathrm{sb▸cd/m^2}\",\n  \"9A\": \"\\\\mathrm{cd/m^2▸sb}\",\n  \"9B\": \"\\\\mathrm{ph▸lx}\",\n  \"9C\": \"\\\\mathrm{lx▸ph}\",\n  \"9D\": \"\\\\mathrm{Ci▸Bq}\",\n  \"9E\": \"\\\\mathrm{Bq▸Ci}\",\n  \"9F\": \"\\\\mathrm{rad▸Gy}\",\n  \"A0\": \"\\\\mathrm{Gy▸rad}\",\n  \"A1\": \"\\\\mathrm{rem▸Sv}\",\n  \"A2\": \"\\\\mathrm{Sv▸rem}\",\n  \"A3\": \"\\\\mathrm{R▸C/kg}\",\n  \"A4\": \"\\\\mathrm{C/kg▸R}\",\n  \"A5\": \"\\\\mathrm{尺▸m}\",\n  \"A6\": \"\\\\mathrm{m▸尺}\",\n  \"A7\": \"\\\\mathrm{寸▸cm}\",\n  \"A8\": \"\\\\mathrm{cm▸寸}\",\n  \"A9\": \"\\\\mathrm{分▸mm}\",\n  \"AA\": \"\\\\mathrm{mm▸分}\",\n  \"AB\": \"\\\\mathrm{間▸m}\",\n  \"AC\": \"\\\\mathrm{m▸間}\",\n  \"AD\": \"\\\\mathrm{町▸m}\",\n  \"AE\": \"\\\\mathrm{m▸町}\",\n  \"AF\": \"\\\\mathrm{里▸km}\",\n  \"B0\": \"\\\\mathrm{km▸里}\",\n  \"B1\": \"\\\\mathrm{海里▸km}\",\n  \"B2\": \"\\\\mathrm{km▸海里}\",\n  \"B3\": \"\\\\mathrm{坪▸m^2}\",\n  \"B4\": \"\\\\mathrm{m^2▸坪}\",\n  \"B5\": \"\\\\mathrm{畝▸m^2}\",\n  \"B6\": \"\\\\mathrm{m^2▸畝}\",\n  \"B7\": \"\\\\mathrm{反▸m^2}\",\n  \"B8\": \"\\\\mathrm{m^2▸反}\",\n  \"B9\": \"\\\\mathrm{町▸m^2}\",\n  \"BA\": \"\\\\mathrm{m^2▸町}\",\n  \"BB\": \"\\\\mathrm{升▸L}\",\n  \"BC\": \"\\\\mathrm{L▸升}\",\n  \"BD\": \"\\\\mathrm{合▸cm^3}\",\n  \"BE\": \"\\\\mathrm{cm^3▸合}\",\n  \"BF\": \"\\\\mathrm{斗▸L}\",\n  \"C0\": \"\\\\mathrm{L▸斗}\",\n  \"C1\": \"\\\\mathrm{石▸L}\",\n  \"C2\": \"\\\\mathrm{L▸石}\",\n  \"C3\": \"\\\\mathrm{貫▸kg}\",\n  \"C4\": \"\\\\mathrm{kg▸貫}\",\n  \"C5\": \"\\\\mathrm{匁▸g}\",\n  \"C6\": \"\\\\mathrm{g▸匁}\",\n  \"C7\": \"\\\\mathrm{斤▸g}\",\n  \"C8\": \"\\\\mathrm{g▸斤}\",\n  \"C9\": \"\\\\mathrm{丈▸m}\",\n  \"CA\": \"\\\\mathrm{m▸丈}\",\n  \"CB\": \"\\\\mathrm{毛▸mm}\",\n  \"CC\": \"\\\\mathrm{mm▸毛}\",\n  \"CD\": \"\\\\mathrm{厘▸mm}\",\n  \"CE\": \"\\\\mathrm{mm▸厘}\",\n  \"CF\": \"\\\\mathrm{尺▸m^2}\",\n  \"D0\": \"\\\\mathrm{m^2▸尺}\",\n  \"D1\": \"\\\\mathrm{合▸m^2}\",\n  \"D2\": \"\\\\mathrm{m^2▸合}\",\n  \"D3\": \"\\\\mathrm{分▸m^2}\",\n  \"D4\": \"\\\\mathrm{m^2▸分}\",\n  \"D5\": \"\\\\mathrm{尺▸L}\",\n  \"D6\": \"\\\\mathrm{L▸尺}\",\n  \"D7\": \"\\\\mathrm{合▸L}\",\n  \"D8\": \"\\\\mathrm{L▸合}\",\n  \"D9\": \"\\\\mathrm{毛▸g}\",\n  \"DA\": \"\\\\mathrm{g▸毛}\",\n  \"DB\": \"\\\\mathrm{厘▸g}\",\n  \"DC\": \"\\\\mathrm{g▸厘}\",\n  \"DD\": \"\\\\mathrm{分▸g}\",\n  \"DE\": \"\\\\mathrm{g▸分}\",\n  \"DF\": \"\\\\mathrm{ft▸in}\",\n  \"E0\": \"\\\\mathrm{in▸ft}\",\n  \"E1\": \"\\\\mathrm{yd▸in}\",\n  \"E2\": \"\\\\mathrm{in▸yd}\",\n  \"E3\": \"\\\\mathrm{yd▸ft}\",\n  \"E4\": \"\\\\mathrm{ft▸yd}\",\n  \"E5\": \"\\\\mathrm{mile▸ft}\",\n  \"E6\": \"\\\\mathrm{ft▸mile}\",\n  \"E7\": \"\\\\mathrm{mile▸yd}\",\n  \"E8\": \"\\\\mathrm{yd▸mile}\",\n  \"E9\": \"\\\\mathrm{n\\\\ mile▸ft}\",\n  \"EA\": \"\\\\mathrm{ft▸n\\\\ mile}\",\n  \"EB\": \"\\\\mathrm{ch▸in}\",\n  \"EC\": \"\\\\mathrm{in▸ch}\",\n  \"ED\": \"\\\\mathrm{ch▸ft}\",\n  \"EE\": \"\\\\mathrm{ft▸ch}\",\n  \"EF\": \"\",\n  \"F0\": \"\",\n  \"F1\": \"\",\n  \"F2\": \"\",\n  \"F3\": \"\",\n  \"F4\": \"\",\n  \"F5\": \"\",\n  \"F6\": \"\",\n  \"F7\": \"\",\n  \"F8\": \"\",\n  \"F9\": \"\",\n  \"FA\": \"\",\n  \"FB\": \"\",\n  \"FC\": \"\",\n  \"FD\": \"\",\n  \"FE\": \"\",\n  \"FF\": \"\"\n}","export const asciiFE_JP = {\n  \"79\": \"\\\\mathrm{cmH_2O▸Pa}\",\n  \"7A\": \"\\\\mathrm{Pa▸cmH_2O}\",\n  \"87\": \"\\\\mathrm{W\\\\cdot h▸J}\",\n  \"88\": \"\\\\mathrm{J▸W\\\\cdot h}\",\n  \"89\": \"\\\\mathrm{Btu/\\\\h▸W}\",\n  \"8A\": \"\\\\mathrm{W▸Btu/\\\\h}\"\n}","export const modelCY = {\n  \"213\": [\"fx-83GT X\", 0],\n  \"214\": [\"fx-85GT X\", 0],\n  \"215\": [\"fx-82DE X\", 1],\n  \"216\": [\"fx-85DE X\", 1],\n  \"217\": [\"fx-991RS X\", 1],\n  \"230\": [\"fx-82EX\", 0],\n  \"231\": [\"fx-85EX\", 0],\n  \"232\": [\"fx-350EX\", 0],\n  \"234\": [\"fx-570EX\", 1],\n  \"235\": [\"fx-991EX\", 1],\n  \"236\": [\"fx-82CN X\", 0],\n  \"237\": [\"fx-350CN X\", 0],\n  \"238\": [\"fx-95CN X\", 0],\n  \"239\": [\"fx-991CN X\", 0],\n  \"240\": [\"fx-530AZ\", 0],\n  \"241\": [\"fx-JP500\", 0],\n  \"242\": [\"fx-JP700\", 0],\n  \"243\": [\"fx-JP900\", 1],\n  \"246\": [\"fx-92 Spéciale Collège\", 1],\n  \"247\": [\"fx-92B Spéciale Collège\", 1],\n  \"250\": [\"fx-87DE X\", 1],\n  \"251\": [\"fx-991DE X\", 1],\n  \"252\": [\"fx-82SP X\", 0],\n  \"253\": [\"fx-350SP X\", 0],\n  \"254\": [\"fx-570SP X\", 1],\n  \"255\": [\"fx-991SP X\", 1],\n  \"256\": [\"fx-82AR X\", 0],\n  \"257\": [\"fx-95AR X\", 0],\n  \"258\": [\"fx-570AR X\", 1],\n  \"259\": [\"fx-991AR X\", 1],\n  \"266\": [\"fx-82SP X II\", 0],\n  \"267\": [\"fx-350SP X II\", 0],\n  \"268\": [\"fx-570SP X II\", 1],\n  \"269\": [\"fx-991SP X II\", 1],\n  \"270\": [\"fx-82LA X\", 0],\n  \"271\": [\"fx-350LA X\", 0],\n  \"272\": [\"fx-570LA X\", 1],\n  \"273\": [\"fx-991LA X\", 1],\n  \"291\": [\"fx-82CE X\", 0],\n  \"292\": [\"fx-85CE X\", 0],\n  \"293\": [\"fx-350CE X\", 0],\n  \"294\": [\"fx-991CE X\", 1],\n  \"295\": [\"fx-92+ Spéciale Collège\", 1],\n  \"296\": [\"fx-85SP X II\", 0],\n  \"297\": [\"fx-97SG X\", 1],\n  \"298\": [\"fx-580VN X\", 0],\n}","export const modelEY = {\n  \"001\": [\"fx-82CW\", 2],\n  \"002\": [\"fx-85CW\", 2],\n  \"003\": [\"fx-350CW\", 2],\n  \"004\": [\"fx-570CW\", 2],\n  \"005\": [\"fx-991CW\", 2],\n  \"006\": [\"fx-92 Collège\", 2],\n  \"007\": [\"fx-92B Secondaire\", 2],\n  \"008\": [\"fx-82SP CW\", 2],\n  \"009\": [\"fx-85SP CW\", 2],\n  \"010\": [\"fx-570SP CW\", 2],\n  \"011\": [\"fx-991SP CW\", 2],\n  \"012\": [\"fx-82DE CW\", 2],\n  \"013\": [\"fx-85DE CW\", 2],\n  \"014\": [\"fx-87DE CW\", 2],\n  \"015\": [\"fx-991DE CW\", 2],\n  \"016\": [\"fx-800DE CW\", 2],\n  \"021\": [\"fx-82NL\", 2],\n  \"023\": [\"fx-880BTG\", 2],\n  \"024\": [\"fx-82CN CW\", 0],\n  \"025\": [\"fx-95CN CW\", 0],\n  \"026\": [\"fx-350CN CW\", 0],\n  \"027\": [\"fx-991CN CW\", 0],\n  \"028\": [\"fx-999CN CW\", 0],\n  \"029\": [\"fx-JP500CW\", 0],\n  \"030\": [\"fx-JP700CW\", 0],\n  \"031\": [\"fx-JP900CW\", 2],\n  \"032\": [\"fx-550AZ\", 2],\n  \"036\": [\"fx-82LA CW\", 2],\n  \"038\": [\"fx-570LA CW\", 2],\n  \"039\": [\"fx-991LA CW\", 2],\n  \"040\": [\"fx-83GT CW\", 2],\n  \"041\": [\"fx-85GT CW\", 2],\n  \"044\": [\"fx-8200 AU\", 2],\n  \"046\": [\"fx-570MY CW\", 2],\n  \"047\": [\"fx-810DE CW\", 2],\n  \"090\": [\"Graph Light\", 2],\n}","import { modelCY } from './CY.js';\nimport { modelEY } from './EY.js';\n\nexport const MODEL_TYPE = {\n  CY: 'CY',\n  EY: 'EY',\n}\n\nexport const getModelInfo = (model, type) => {\n  return (type === MODEL_TYPE.EY ? modelEY[model] : modelCY[model]) || [undefined, undefined];\n}\n","import { ascii00 } from './00.js';\nimport { ascii00_EY } from './00_EY.js';\nimport { asciiFA } from './FA.js';\nimport { asciiFB } from './FB.js';\nimport { asciiFB_EY } from './FB_EY.js';\nimport { asciiFD } from './FD.js';\nimport { asciiFE } from './FE.js';\nimport { asciiFE_JP } from './FE_JP.js';\nimport { MODEL_TYPE } from \"../model/index.js\";\n\nconst JPModel = ['CY240', 'CY241', 'CY242', 'CY243', 'EY029', 'EY030', 'EY031', 'EY032'];\n\nexport class AsciiTable {\n  constructor(modelType, modelId) {\n    this.modelType = modelType;\n    this.modelId = modelId;\n  }\n\n  get() {\n    const asciiCopy = { ...ascii00 };\n    const combine = (prefix, map) => {\n      for (const key in map) {\n        asciiCopy[`${prefix}${key}`] = map[key];\n      }\n    }\n\n    if (this.modelType === MODEL_TYPE.EY) {\n      for (const k in ascii00_EY) {\n        asciiCopy[k] = ascii00_EY[k];\n      }\n    }\n    combine('FA', asciiFA);\n    combine('FB', asciiFB);\n    if (this.modelType === MODEL_TYPE.EY) {\n      combine('FB', asciiFB_EY);\n    }\n    combine('FD', asciiFD);\n    combine('FE', asciiFE);\n    if (JPModel.includes(`${this.modelType}${this.modelId}`)) {\n      combine('FE', asciiFE_JP);\n    }\n    return asciiCopy;\n  }\n}\n\nexport const mathTemplate = [\n  '18',  // mixed fraction\n  '2F',  // recurring decimal\n  '50',  // Σ\n  '51',  // ∫\n  '52',  // d/dx\n  '53',  // π\n  '68',  // abs\n  '72',  // e^x\n  '73',  // 10^x\n  '74',  // sqrt\n  '7D',  // log ab\n  'C8',  // fraction\n  'C9',  // ^ exponent\n  'CA',  // x sqrt\n]\n\nexport const recDecOverlineModel = [\n  \"CY215\",\n  \"CY216\",\n  \"CY252\",\n  \"CY253\",\n  \"CY254\",\n  \"CY255\",\n  \"CY266\",\n  \"CY267\",\n  \"CY268\",\n  \"CY269\",\n  \"CY296\",\n\n  \"EY008\",\n  \"EY009\",\n  \"EY010\",\n  \"EY011\",\n  \"EY012\",\n  \"EY013\",\n  \"EY014\",\n  \"EY015\",\n  \"EY016\",\n  \"EY047\",\n];\n\nexport const recDecBracketModel = ['CY298', 'EY023'];\n","export const menuInfo = {\n  \"X1\": {\n    \"name\": {\n      \"en\": \"Calculate Manual\",\n      \"zh\": \"计算模式说明\",\n      \"vi\": \"Mô tả Phép tính thường\"\n    }\n  },\n  \"X2\": {\n    \"name\": {\n      \"en\": \"Base-N Manual\",\n      \"zh\": \"基数模式说明\",\n      \"vi\": \"Mô tả Hệ đếm cơ số N\"\n    }\n  },\n  \"X3\": {\n    \"name\": {\n      \"en\": \"Statistics Manual\",\n      \"zh\": \"统计模式说明\",\n      \"vi\": \"Mô tả Thống kê\"\n    }\n  },\n  \"X4\": {\n    \"name\": {\n      \"en\": \"Complex Manual\",\n      \"zh\": \"复数模式说明\",\n      \"vi\": \"Mô tả Số phức\"\n    }\n  },\n  \"X5\": {\n    \"name\": {\n      \"en\": \"Equation Manual\",\n      \"zh\": \"方程模式说明\",\n      \"vi\": \"Mô tả Phương trình\"\n    }\n  },\n  \"X6\": {\n    \"name\": {\n      \"en\": \"Matrix Manual\",\n      \"zh\": \"矩阵模式说明\",\n      \"vi\": \"Mô tả Ma trận\"\n    }\n  },\n  \"X7\": {\n    \"name\": {\n      \"en\": \"Vector Manual\",\n      \"zh\": \"向量模式说明\",\n      \"vi\": \"Mô tả Véc-tơ\"\n    }\n  },\n  \"X8\": {\n    \"name\": {\n      \"en\": \"Table Manual\",\n      \"zh\": \"函数表格模式说明\",\n      \"vi\": \"Mô tả Bảng giá trị\"\n    }\n  },\n  \"X9\": {\n    \"name\": {\n      \"en\": \"Verify Manual\",\n      \"zh\": \"验证模式说明\",\n      \"vi\": \"Mô tả Kiểm chứng\"\n    }\n  },\n  \"XA\": {\n    \"name\": {\n      \"en\": \"Ratio Manual\",\n      \"zh\": \"比例模式说明\",\n      \"vi\": \"Mô tả Tỉ lệ thức\"\n    }\n  },\n  \"XB\": {\n    \"name\": {\n      \"en\": \"Inequality Manual\",\n      \"zh\": \"不等式模式说明\",\n      \"vi\": \"Mô tả Bất phương trình\"\n    }\n  },\n  \"XC\": {\n    \"name\": {\n      \"en\": \"Distribution Manual\",\n      \"zh\": \"分布模式说明\",\n      \"vi\": \"Mô tả Phân phối\"\n    }\n  },\n  \"XD\": {\n    \"name\": {\n      \"en\": \"Spreadsheet Manual\",\n      \"zh\": \"电子表格模式说明\",\n      \"vi\": \"Mô tả Bảng tính\"\n    }\n  },\n  \"XE\": {\n    \"name\": {\n      \"en\": \"Algorithm Manual\",\n      \"zh\": \"算法模式说明\",\n      \"vi\": \"Mô tả Thuật toán\"\n    }\n  },\n  \"XF\": {\n    \"name\": {\n      \"en\": \"Math Box Manual\",\n      \"zh\": \"数学盒说明\",\n      \"vi\": \"Mô tả Hộp toán học\"\n    }\n  },\n  \"Y1\": {\n    \"name\": {\n      \"en\": \"AC Break\",\n      \"zh\": \"AC键中断\",\n      \"vi\": \"Ngắt AC\"\n    }\n  },\n  \"Y2\": {\n    \"name\": {\n      \"en\": \"Syntax ERROR\",\n      \"zh\": \"语法错误\",\n      \"vi\": \"Lỗi cú pháp\"\n    }\n  },\n  \"Y3\": {\n    \"name\": {\n      \"en\": \"Math ERROR\",\n      \"zh\": \"数学错误\",\n      \"vi\": \"Lỗi phép tính\"\n    }\n  },\n  \"Y4\": {\n    \"name\": {\n      \"en\": \"Range ERROR\",\n      \"zh\": \"范围错误\",\n      \"vi\": \"Lỗi phạm vi\"\n    }\n  },\n  \"Y5\": {\n    \"name\": {\n      \"en\": \"Cannot Simplify\",\n      \"zh\": \"无法化简\",\n      \"vi\": \"Không thể rút gọn\"\n    }\n  },\n  \"Y6\": {\n    \"name\": {\n      \"en\": \"Circular ERROR\",\n      \"zh\": \"循环引用错误\",\n      \"vi\": \"Lỗi vòng lặp\"\n    }\n  },\n  \"Y7\": {\n    \"name\": {\n      \"en\": \"Stack ERROR\",\n      \"zh\": \"堆栈错误\",\n      \"vi\": \"Lỗi nhóm phép tính\"\n    }\n  },\n  \"Y8\": {\n    \"name\": {\n      \"en\": \"Argument ERROR\",\n      \"zh\": \"自变量错\",\n      \"vi\": \"Lỗi đối số\"\n    }\n  },\n  \"Y9\": {\n    \"name\": {\n      \"en\": \"Dimension ERROR\",\n      \"zh\": \"维数错误\",\n      \"vi\": \"Lỗi kích thước\"\n    }\n  },\n  \"YA\": {\n    \"name\": {\n      \"en\": \"Cannot Solve\",\n      \"zh\": \"无解\",\n      \"vi\": \"Không giải được\"\n    }\n  },\n  \"YB\": {\n    \"name\": {\n      \"en\": \"Time Out\",\n      \"zh\": \"超时\",\n      \"vi\": \"Hết thời gian\"\n    }\n  },\n  \"YC\": {\n    \"name\": {\n      \"en\": \"Variable ERROR\",\n      \"zh\": \"变量错误\",\n      \"vi\": \"Lỗi biến số\"\n    }\n  },\n  \"YD\": {\n    \"name\": {\n      \"en\": \"NULL ERROR\",\n      \"zh\": \"空值错误\",\n      \"vi\": \"Lỗi NULL\"\n    }\n  },\n  \"YE\": {\n    \"name\": {\n      \"en\": \"Memory ERROR\",\n      \"zh\": \"内存错误\",\n      \"vi\": \"Lỗi bộ nhớ\"\n    }\n  },\n  \"YG\": {\n    \"name\": {\n      \"en\": \"No Operator\",\n      \"zh\": \"无运算符\",\n      \"vi\": \"Không có Toán tử\"\n    }\n  },\n  \"YH\": {\n    \"name\": {\n      \"en\": \"Not Defined\",\n      \"zh\": \"未定义\",\n      \"vi\": \"Không xác định\"\n    }\n  },\n  \"YZ\": {\n    \"name\": {\n      \"en\": \"Nesting ERROR\",\n      \"zh\": \"嵌套错误\",\n      \"vi\": \"Lỗi lồng hàm\"\n    }\n  },\n  \"Z0\": {\n    \"name\": {\n      \"en\": \"Setup Menu Manual\",\n      \"zh\": \"设置菜单说明\",\n      \"vi\": \"Mô tả Trình cài đặt\"\n    }\n  },\n  \"Z1\": {\n    \"name\": {\n      \"en\": \"Setup Sub Menu Manual\",\n      \"zh\": \"设置(二级)菜单说明\",\n      \"vi\": \"Mô tả Trình cài đặt (phụ)\"\n    }\n  }\n}\n","export const modeInfo = {\n  \"88\": {\n    \"name\": {\n      \"en\": \"Table\",\n      \"zh\": \"函数表格\",\n      \"vi\": \"Bảng giá trị\"\n    },\n  },\n  \"09\": {\n    \"name\": {\n      \"en\": \"Graph\",\n      \"zh\": \"绘图\",\n    },\n  },\n  \"89\": {\n    \"name\": {\n      \"en\": \"Verify\",\n      \"zh\": \"验证\",\n      \"vi\": \"Kiểm chứng\"\n    },\n  },\n  \"06\": {\n    \"name\": {\n      \"en\": \"Matrix\",\n      \"zh\": \"矩阵\",\n      \"vi\": \"Ma trận\"\n    },\n  },\n  \"07\": {\n    \"name\": {\n      \"en\": \"Vector\",\n      \"zh\": \"向量\",\n      \"vi\": \"Véc-tơ\"\n    },\n  },\n  \"0D\": {\n    \"name\": {\n      \"en\": \"Spreadsheet\",\n      \"zh\": \"数据表格\",\n      \"vi\": \"Bảng tính\"\n    },\n  },\n  \"0E\": {\n    \"name\": {\n      \"en\": \"Algorithm\",\n      \"zh\": \"算法\",\n      \"vi\": \"Thuật toán\"\n    },\n  },\n  \"4F\": {\n    \"name\": {\n      \"en\": \"Math Box\",\n      \"zh\": \"数学盒\",\n      \"vi\": \"Hộp Toán học\"\n    },\n  },\n  \"C1\": {\n    \"name\": {\n      \"en\": \"Calculate\",\n      \"zh\": \"计算\",\n      \"vi\": \"Phép tính thường\"\n    },\n  },\n  \"C4\": {\n    \"name\": {\n      \"en\": \"Complex\",\n      \"zh\": \"复数\",\n      \"vi\": \"Số phức\"\n    },\n  },\n  \"02\": {\n    \"name\": {\n      \"en\": \"Base-N\",\n      \"zh\": \"基数\",\n      \"vi\": \"Hệ đếm cơ số N\"\n    },\n    \"subMode\": {\n      \"01\": {\n        \"name\": {\n          \"en\": \"Binary\",\n          \"zh\": \"二进制\",\n          \"vi\": \"Nhị phân\"\n        }\n      },\n      \"07\": {\n        \"name\": {\n          \"en\": \"Octal\",\n          \"zh\": \"八进制\",\n          \"vi\": \"Bát phân\"\n        }\n      },\n      \"09\": {\n        \"name\": {\n          \"en\": \"Decimal\",\n          \"zh\": \"十进制\",\n          \"vi\": \"Thập phân\"\n        }\n      },\n      \"0F\": {\n        \"name\": {\n          \"en\": \"Hexadecimal\",\n          \"zh\": \"十六进制\",\n          \"vi\": \"Thập lục phân\"\n        }\n      }\n    }\n  },\n  \"03\": {\n    \"name\": {\n      \"en\": \"Statistics\",\n      \"zh\": \"统计\",\n      \"vi\": \"Thống kê\"\n    },\n    \"subMode\": {\n      \"01\": {\n        \"name\": {\n          \"en\": \"Single-Variable Statistic\",\n          \"zh\": \"单变量统计\",\n          \"vi\": \"Thống kê 1 biến\"\n        }\n      },\n      \"02\": {\n        \"name\": {\n          \"en\": \"Linear Regression [y=a+bx]/[y=ax+b]\",\n          \"zh\": \"线性回归 [y=a+bx]/[y=ax+b]\",\n          \"vi\": \"Hồi quy tuyến tính [y=a+bx]/[y=ax+b]\"\n        }\n      },\n      \"03\": {\n        \"name\": {\n          \"en\": \"Quadratic Regression [y=a+bx+cx²]/[y=ax²+bx+c]\",\n          \"zh\": \"二次回归 [y=a+bx+cx²]/[y=ax²+bx+c]\",\n          \"vi\": \"Hồi quy bậc hai [y=a+bx+cx²]/[y=ax²+bx+c]\"\n        }\n      },\n      \"04\": {\n        \"name\": {\n          \"en\": \"Logarithmic Regression [y=a+b･ln(x)]\",\n          \"zh\": \"对数回归 [y=a+b･ln(x)]\",\n          \"vi\": \"Hồi quy lôgarit [y=a+b･ln(x)]\"\n        }\n      },\n      \"05\": {\n        \"name\": {\n          \"en\": \"e exponential Regression [y=a･e^(bx)]\",\n          \"zh\": \"e 指数回归 [y=a･e^(bx)]\",\n          \"vi\": \"e hồi quy hàm số mũ [y=a･e^(bx)]\"\n        }\n      },\n      \"06\": {\n        \"name\": {\n          \"en\": \"ab exponential Regression [y=a･b^x]\",\n          \"zh\": \"ab 指数回归 [y=a･b^x]\",\n          \"vi\": \"ab hồi quy hàm số mũ [y=a･b^x]\"\n        }\n      },\n      \"07\": {\n        \"name\": {\n          \"en\": \"Power Regression [y=a･x^b]\",\n          \"zh\": \"乘方回归 [y=a･x^b]\",\n          \"vi\": \"Hồi quy lũy thừa [y=a･x^b]\"\n        }\n      },\n      \"08\": {\n        \"name\": {\n          \"en\": \"Inverse Regression [y=a+b/x]\",\n          \"zh\": \"逆回归 [y=a+b/x]\",\n          \"vi\": \"Hồi quy nghịch đảo [y=a+b/x]\"\n        }\n      }\n    }\n  },\n  \"0C\": {\n    \"name\": {\n      \"en\": \"Distribution\",\n      \"zh\": \"分布\",\n      \"vi\": \"Phân phối\"\n    },\n    \"subMode\": {\n      \"01\": {\n        \"name\": {\n          \"en\": \"Normal Probability Density\",\n          \"zh\": \"正态概率密度\",\n          \"vi\": \"Mật độ xác suất chuẩn\"\n        }\n      },\n      \"02\": {\n        \"name\": {\n          \"en\": \"Normal Cumulative Distribution\",\n          \"zh\": \"正态累积分布\",\n          \"vi\": \"Phân phối tích lũy chuẩn\"\n        }\n      },\n      \"03\": {\n        \"name\": {\n          \"en\": \"Inverse Normal Cumulative Distribution\",\n          \"zh\": \"反正态累积分布\",\n          \"vi\": \"Phân phối tích lũy chuẩn nghịch đảo\"\n        }\n      },\n      \"04\": {\n        \"name\": {\n          \"en\": \"Binomial Probability\",\n          \"zh\": \"二项概率密度\",\n          \"vi\": \"Xác suất nhị thức\"\n        }\n      },\n      \"05\": {\n        \"name\": {\n          \"en\": \"Binomial Cumulative Distribution\",\n          \"zh\": \"二项累积分布\",\n          \"vi\": \"Phân phối tích lũy nhị thức\"\n        }\n      },\n      \"06\": {\n        \"name\": {\n          \"en\": \"Poisson Probability\",\n          \"zh\": \"泊松概率密度\",\n          \"vi\": \"Xác suất Poisson\"\n        }\n      },\n      \"07\": {\n        \"name\": {\n          \"en\": \"Poisson Cumulative Distribution\",\n          \"zh\": \"泊松累积分布\",\n          \"vi\": \"Phân phối tích lũy Poisson\"\n        }\n      }\n    }\n  },\n  \"45\": {\n    \"name\": {\n      \"en\": \"Equation\",\n      \"zh\": \"方程\",\n      \"vi\": \"Phương trình\"\n    },\n    \"subMode\": {\n      \"01\": {\n        \"name\": {\n          \"en\": \"Simultaneous Equation with 2 Unknowns\",\n          \"zh\": \"二元一次方程组\",\n          \"vi\": \"Phương trình tuyến tính đồng thời với 2 ẩn\"\n        }\n      },\n      \"02\": {\n        \"name\": {\n          \"en\": \"Simultaneous Equation with 3 Unknowns\",\n          \"zh\": \"三元一次方程组\",\n          \"vi\": \"Phương trình tuyến tính đồng thời với 3 ẩn\"\n        }\n      },\n      \"03\": {\n        \"name\": {\n          \"en\": \"Simultaneous Equation with 4 Unknowns\",\n          \"zh\": \"四元一次方程组\",\n          \"vi\": \"Phương trình tuyến tính đồng thời với 4 ẩn\"\n        }\n      },\n      \"04\": {\n        \"name\": {\n          \"en\": \"Quadratic Equation [ax²+bx+c=0]\",\n          \"zh\": \"二次方程 [ax²+bx+c=0]\",\n          \"vi\": \"Phương trình bậc hai [ax²+bx+c=0]\"\n        }\n      },\n      \"05\": {\n        \"name\": {\n          \"en\": \"Cubic Equation [ax³+bx²+cx+d=0]\",\n          \"zh\": \"三次方程 [ax³+bx²+cx+d=0]\",\n          \"vi\": \"Phương trình bậc hai [ax³+bx²+cx+d=0]\"\n        }\n      },\n      \"06\": {\n        \"name\": {\n          \"en\": \"Quartic Equation [ax⁴+bx³+cx²+dx+e=0]\",\n          \"zh\": \"四次方程 [ax⁴+bx³+cx²+dx+e=0]\",\n          \"vi\": \"Phương trình bậc bốn [ax⁴+bx³+cx²+dx+e=0]\"\n        }\n      },\n      \"08\": {\n        \"name\": {\n          \"en\": \"Solver\",\n          \"zh\": \"求解方程\",\n          \"vi\": \"Bộ giải phương trình\"\n        }\n      }\n    }\n  },\n  \"4A\": {\n    \"name\": {\n      \"en\": \"Ratio\",\n      \"zh\": \"比例\",\n      \"vi\": \"Tỉ lệ thức\"\n    },\n    \"subMode\": {\n      \"01\": {\n        \"name\": {\n          \"en\": \"A:B=X:D\"\n        }\n      },\n      \"02\": {\n        \"name\": {\n          \"en\": \"A:B=C:X\"\n        }\n      }\n    }\n  },\n  \"4B\": {\n    \"name\": {\n      \"en\": \"Inequality\",\n      \"zh\": \"不等式\",\n      \"vi\": \"Bất phương trình\"\n    },\n    \"subMode\": {\n      \"0400\": {\n        \"name\": {\n          \"en\": \"ax²+bx+c>0\"\n        }\n      },\n      \"0401\": {\n        \"name\": {\n          \"en\": \"ax²+bx+c<0\"\n        }\n      },\n      \"0402\": {\n        \"name\": {\n          \"en\": \"ax²+bx+c≥0\"\n        }\n      },\n      \"0403\": {\n        \"name\": {\n          \"en\": \"ax²+bx+c≤0\"\n        }\n      },\n      \"0500\": {\n        \"name\": {\n          \"en\": \"ax³+bx²+cx+d>0\"\n        }\n      },\n      \"0501\": {\n        \"name\": {\n          \"en\": \"ax³+bx²+cx+d<0\"\n        }\n      },\n      \"0502\": {\n        \"name\": {\n          \"en\": \"ax³+bx²+cx+d≥0\"\n        }\n      },\n      \"0503\": {\n        \"name\": {\n          \"en\": \"ax³+bx²+cx+d≤0\"\n        }\n      },\n      \"0600\": {\n        \"name\": {\n          \"en\": \"ax⁴+bx³+cx²+dx+e>0\"\n        }\n      },\n      \"0601\": {\n        \"name\": {\n          \"en\": \"ax⁴+bx³+cx²+dx+e<0\"\n        }\n      },\n      \"0602\": {\n        \"name\": {\n          \"en\": \"ax⁴+bx³+cx²+dx+e≥0\"\n        }\n      },\n      \"0603\": {\n        \"name\": {\n          \"en\": \"ax⁴+bx³+cx²+dx+e≤0\"\n        }\n      }\n    }\n  },\n}\n","export const translate = (dict) => {\n  return dict[globalThis.cwqrConfig.language] || dict['en'];\n}\n\nexport const availableLanguages = ['zh', 'en', 'vi'];\n","import { menuInfo } from './menu.js';\nimport { modeInfo } from './mode.js';\nimport { translate } from \"../utils.js\";\n\nexport class ParseMode {\n  constructor(M) {\n    this.M = M;\n  }\n\n  getMainMode() {\n    if (!this.mainMode) {\n      this.mainMode = this.M.slice(0, 2);\n    }\n    return this.mainMode;\n  }\n\n  getSubMode() {\n    if (!this.subMode) {\n      this.subMode = this.M.slice(2, 4);\n    }\n    return this.subMode;\n  }\n\n  getResultTemplate() {\n    if (!this.resultTemplate) {\n      this.resultTemplate = this.M.slice(4, 6);\n    }\n    return this.resultTemplate;\n  }\n\n  getResultFormat() {\n    if (!this.reultFormat) {\n      this.reultFormat = this.M.slice(6, 8);\n    }\n    return this.reultFormat;\n  }\n\n  getInqType() {\n    if (!this.inqType) {\n      this.inqType = this.M.slice(6, 8);\n    }\n    return this.inqType;\n  }\n\n  getSolveFor() {\n    if (!this.solveFor) {\n      this.solveFor = this.M.slice(8, 10);\n    }\n    return this.solveFor;\n  }\n\n  getModeInfo() {\n    const mainMode = this.getMainMode();\n    if (mainMode.startsWith('X') || mainMode.startsWith('Y') || mainMode.startsWith('Z')) {\n      return { mainName: translate(menuInfo[mainMode]['name']) };\n    }\n    let subMode = this.getSubMode();\n    if (mainMode === '4B') {\n      subMode += this.getInqType();\n    }\n    const mainName = translate(modeInfo[mainMode]['name']);\n    let subName = (modeInfo[mainMode]['subMode'] || {})[subMode];\n    subName = subName ? translate(subName['name']) : undefined;\n    return { mainName, subName };\n  }\n}","export const setupInfo = {\n  \"NUMBER_FORMAT\": {\n    \"name\": {\n      \"en\": \"Number Format\",\n      \"zh\": \"显示格式\",\n      \"vi\": \"Định dạng số\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Norm1\",\n        \"zh\": \"常规1\",\n        \"vi\": \"Viết số bình thường 1\"\n      },\n      \"4\": {\n        \"en\": \"Norm2\",\n        \"zh\": \"常规2\",\n        \"vi\": \"Viết số bình thường 2\"\n      },\n      \"8\": {\n        \"en\": \"Fix\",\n        \"zh\": \"位数\",\n        \"vi\": \"Chọn số thập phân\"\n      },\n      \"9\": {\n        \"en\": \"Sci\",\n        \"zh\": \"科学\",\n        \"vi\": \"Dạng a×10ⁿ\"\n      }\n    }\n  },\n  \"DECIMAL_MARK\": {\n    \"name\": {\n      \"en\": \"Decimal Mark\",\n      \"zh\": \"小数点显示\",\n      \"vi\": \"Dấu thập phân\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Comma\",\n        \"zh\": \"逗点\",\n        \"vi\": \"Phẩy\"\n      },\n      \"1\": {\n        \"en\": \"Dot\",\n        \"zh\": \"句点\",\n        \"vi\": \"Chấm\"\n      }\n    }\n  },\n  \"ANGLE_UNIT\": {\n    \"name\": {\n      \"en\": \"Angle Unit\",\n      \"zh\": \"角度单位\",\n      \"vi\": \"Đơn vị góc\"\n    },\n    \"setup\": {\n      \"4\": {\n        \"en\": \"Degree\",\n        \"zh\": \"度(D)\",\n        \"vi\": \"Độ\"\n      },\n      \"5\": {\n        \"en\": \"Radian\",\n        \"zh\": \"弧度(R)\",\n        \"vi\": \"Radian\"\n      },\n      \"6\": {\n        \"en\": \"Gradian\",\n        \"zh\": \"百分度(G)\",\n        \"vi\": \"Grad\"\n      }\n    }\n  },\n  \"INPUT_OUTPUT\": {\n    \"name\": {\n      \"en\": \"Input/Output\",\n      \"zh\": \"输入/输出\",\n      \"vi\": \"Nhập/Xuất\"\n    },\n    \"setup\": {\n      \"00\": {\n        \"en\": \"LineI/LineO\",\n        \"zh\": \"线性输入/线性输出\",\n        \"vi\": \"Dòng vào/ra\"\n      },\n      \"01\": {\n        \"en\": \"LineI/DecimalO\",\n        \"zh\": \"线性输入/小数输出\",\n        \"vi\": \"Dòng vào/Số thập phân ra\"\n      },\n      \"10\": {\n        \"en\": \"MathI/MathO\",\n        \"zh\": \"数学输入/数学输出\",\n        \"vi\": \"Số tự nhiên vào/ra\"\n      },\n      \"11\": {\n        \"en\": \"MathI/DecimalO\",\n        \"zh\": \"数学输入/小数输出\",\n        \"vi\": \"Số tự nhiên vào/Số thập phân ra\"\n      }\n    }\n  },\n  \"FRACTION_RESULT\": {\n    \"name\": {\n      \"en\": \"Fraction Result\",\n      \"zh\": \"分数结果\",\n      \"vi\": \"Kết quả phân số\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"d/c\",\n        \"zh\": \"假分数\"\n      },\n      \"1\": {\n        \"en\": \"ab/c\",\n        \"zh\": \"带分数\"\n      }\n    }\n  },\n  \"COMPLEX_RESULT\": {\n    \"name\": {\n      \"en\": \"Complex Result\",\n      \"zh\": \"复数结果\",\n      \"vi\": \"Kết quả số phức\"\n    },\n    \"setup\": {\n      \"1\": {\n        \"en\": \"a+bi\"\n      },\n      \"0\": {\n        \"en\": \"r∠θ\"\n      }\n    }\n  },\n  \"STATISTICS_FREQUENCY\": {\n    \"name\": {\n      \"en\": \"Statistics Frequency\",\n      \"zh\": \"统计频数\",\n      \"vi\": \"Tần số thống kê\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Off\",\n        \"zh\": \"关\",\n        \"vi\": \"Tắt\"\n      },\n      \"1\": {\n        \"en\": \"On\",\n        \"zh\": \"开\",\n        \"vi\": \"Bật\"\n      }\n    }\n  },\n  \"RECURRING_DECIMAL\": {\n    \"name\": {\n      \"en\": \"Recurring Decimal\",\n      \"zh\": \"循环小数\",\n      \"vi\": \"Số thập phân tuần hoàn\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Off\",\n        \"zh\": \"关\",\n        \"vi\": \"Tắt\"\n      },\n      \"1\": {\n        \"en\": \"On\",\n        \"zh\": \"开\",\n        \"vi\": \"Bật\"\n      }\n    }\n  },\n  \"SIMPLIFY\": {\n    \"name\": {\n      \"en\": \"Simplify\",\n      \"zh\": \"化简\",\n      \"vi\": \"Rút gọn\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Auto\",\n        \"zh\": \"自动\",\n        \"vi\": \"Tự động\"\n      },\n      \"1\": {\n        \"en\": \"Manual\",\n        \"zh\": \"手动\",\n        \"vi\": \"Bằng tay\"\n      }\n    }\n  },\n  \"AUTO_POWER_OFF\": {\n    \"name\": {\n      \"en\": \"Auto Power Off\",\n      \"zh\": \"自动关机\",\n      \"vi\": \"Tự động tắt\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"10 Min.\",\n        \"zh\": \"10分钟\",\n        \"vi\": \"10 phút\"\n      },\n      \"1\": {\n        \"en\": \"60 Min.\",\n        \"zh\": \"60分钟\",\n        \"vi\": \"60 phút\"\n      }\n    }\n  },\n  \"TABLE_TYPE\": {\n    \"name\": {\n      \"en\": \"Table Type\",\n      \"zh\": \"函数表格类型\",\n      \"vi\": \"Loại bảng\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"f(x)\"\n      },\n      \"1\": {\n        \"en\": \"f(x),g(x)\"\n      },\n      \"2\": {\n        \"en\": \"g(x)\"\n      }\n    }\n  },\n  \"ENGINEER_SYMBOL\": {\n    \"name\": {\n      \"en\": \"Engineer Symbol\",\n      \"zh\": \"工程符号\",\n      \"vi\": \"Kí hiệu kĩ thuật\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Off\",\n        \"zh\": \"关\",\n        \"vi\": \"Tắt\"\n      },\n      \"1\": {\n        \"en\": \"On\",\n        \"zh\": \"开\",\n        \"vi\": \"Bật\"\n      }\n    }\n  },\n  \"DIGIT_SEPARATOR\": {\n    \"name\": {\n      \"en\": \"Digit Separator\",\n      \"zh\": \"数字分隔符\",\n      \"vi\": \"Dấu cách 3 chữ số\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Off\",\n        \"zh\": \"关\",\n        \"vi\": \"Tắt\"\n      },\n      \"1\": {\n        \"en\": \"On\",\n        \"zh\": \"开\",\n        \"vi\": \"Bật\"\n      }\n    }\n  },\n  \"MULTI_LINE_FONT\": {\n    \"name\": {\n      \"en\": \"Multi-Line Font\",\n      \"zh\": \"多行字体\",\n      \"vi\": \"Phông Multi-Line\"\n    },\n    \"setup\": {\n      \"A\": {\n        \"en\": \"Small Font\",\n        \"zh\": \"小字体\",\n        \"vi\": \"Phông chữ nhỏ\"\n      },\n      \"E\": {\n        \"en\": \"Normal Font\",\n        \"zh\": \"普通字体\",\n        \"vi\": \"Phông chữ thường\"\n      }\n    }\n  },\n  \"EQUATION_COMPLEX_ROOT\": {\n    \"name\": {\n      \"en\": \"Equation Complex Root\",\n      \"zh\": \"方程复数根\",\n      \"vi\": \"Nghiệm Phức Phương trình\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Off\",\n        \"zh\": \"关\",\n        \"vi\": \"Tắt\"\n      },\n      \"1\": {\n        \"en\": \"On\",\n        \"zh\": \"开\",\n        \"vi\": \"Bật\"\n      }\n    }\n  },\n  \"SPREADSHEET_AUTO_CALC\": {\n    \"name\": {\n      \"en\": \"Spreadsheet: Auto Calc\",\n      \"zh\": \"数据表格：自动计算\",\n      \"vi\": \"Bảng tính: Tự động tính\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Off\",\n        \"zh\": \"关\",\n        \"vi\": \"Tắt\"\n      },\n      \"1\": {\n        \"en\": \"On\",\n        \"zh\": \"开\",\n        \"vi\": \"Bật\"\n      }\n    }\n  },\n  \"SPREADSHEET_SHOW_CELL\": {\n    \"name\": {\n      \"en\": \"Spreadsheet: Show Cell\",\n      \"zh\": \"数据表格：显示单元格\",\n      \"vi\": \"Bảng tính: Hiện ô\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Formula\",\n        \"zh\": \"公式\",\n        \"vi\": \"Công thức\"\n      },\n      \"1\": {\n        \"en\": \"Value\",\n        \"zh\": \"数值\",\n        \"vi\": \"Giá trị\"\n      }\n    }\n  },\n  \"QR_CODE_VERSION\": {\n    \"name\": {\n      \"en\": \"QR Code Version\",\n      \"zh\": \"QR码版本\",\n      \"vi\": \"Phiên bản mã QR\"\n    },\n    \"setup\": {\n      \"B\": {\n        \"en\": \"Version 11\",\n        \"zh\": \"版本11\",\n        \"vi\": \"Phiên bản 11\"\n      },\n      \"3\": {\n        \"en\": \"Version 3\",\n        \"zh\": \"版本3\",\n        \"vi\": \"Phiên bản 3\"\n      }\n    }\n  },\n  \"ALGORITHM_BACKGROUND\": {\n    \"name\": {\n      \"en\": \"Algorithm: Background\",\n      \"zh\": \"算法：运行时背景\",\n      \"vi\": \"Thuật toán: Nền\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"Axes\",\n        \"zh\": \"坐标轴\",\n        \"vi\": \"Trục\"\n      },\n      \"1\": {\n        \"en\": \"Axes/Grid\",\n        \"zh\": \"坐标轴/网格\",\n        \"vi\": \"Trục/Lưới\"\n      },\n      \"2\": {\n        \"en\": \"Axes/xy\",\n        \"zh\": \"坐标轴/xy标签\",\n        \"vi\": \"Trục/xy\"\n      },\n      \"3\": {\n        \"en\": \"None\",\n        \"zh\": \"无\",\n        \"vi\": \"Không có\"\n      }\n    }\n  },\n  \"ALGORITHM_UNIT_SETTING\": {\n    \"name\": {\n      \"en\": \"Algorithm: Unit Setting\",\n      \"zh\": \"算法：移动单位设置\",\n      \"vi\": \"Thuật toán: Cài đặt đơn vị\"\n    },\n    \"setup\": {\n      \"0\": {\n        \"en\": \"pixels\",\n        \"zh\": \"像素\",\n        \"vi\": \"pixel\"\n      },\n      \"1\": {\n        \"en\": \"units\",\n        \"zh\": \"单位长度\",\n        \"vi\": \"đơn vị\"\n      }\n    }\n  },\n  \"LANGUAGE\": {\n    \"name\": {\n      \"en\": \"Language\",\n      \"zh\": \"语言\",\n    },\n    \"setup\": {\n      // this setup is based on model\n    },\n  },\n}","import { setupInfo } from './setup.js';\nimport { translate } from \"../utils.js\";\n\nexport class ParseSetup {\n  constructor(S) {\n    this.S = S;\n  }\n\n  isFullSetup() {\n    return this.S.length !== 5;\n  }\n\n  getNumberFormatMainCode() {\n    if (!this.numberFormatMain) {\n      this.numberFormatMain = this.S.slice(0, 1);\n    }\n    return this.numberFormatMain;\n  }\n\n  getNumberFormatSubCode() {\n    if (!this.numberFormatSub) {\n      this.numberFormatSub = this.S.slice(1, 2);\n    }\n    return this.numberFormatSub;\n  }\n\n  getInputCode() {\n    if (!this.inputCode) {\n      this.inputCode = this.S.slice(4, 5);\n    }\n    return this.inputCode;\n  }\n\n  getOutputCode() {\n    if (!this.outputCode) {\n      this.outputCode = this.S.slice(10, 11);\n    }\n    return this.outputCode;\n  }\n\n\n  getDecimalMarkCode() {\n    if (!this.decimalMarkCode) {\n      this.decimalMarkCode = this.S.slice(2, 3);\n    }\n    return this.decimalMarkCode;\n  }\n\n  getAngleUnitCode() {\n    if (!this.angleUnitCode) {\n      this.angleUnitCode = this.S.slice(3, 4);\n    }\n    return this.angleUnitCode;\n  }\n\n  getFractionResultCode() {\n    if (!this.fractionResultCode) {\n      this.fractionResultCode = this.S.slice(5, 6);\n    }\n    return this.fractionResultCode;\n  }\n\n  getComplexResultCode() {\n    if (!this.complexResultCode) {\n      this.complexResultCode = this.S.slice(6, 7);\n    }\n    return this.complexResultCode;\n  }\n\n  getStatisticsFrequencyCode() {\n    if (!this.statisticsFrequencyCode) {\n      this.statisticsFrequencyCode = this.S.slice(7, 8);\n    }\n    return this.statisticsFrequencyCode;\n  }\n\n  getRecurringDecimalCode() {\n    if (!this.recurringDecimalCode) {\n      this.recurringDecimalCode = this.S.slice(8, 9);\n    }\n    return this.recurringDecimalCode;\n  }\n\n  getSimplifyCode() {\n    if (!this.simplifyCode) {\n      this.simplifyCode = this.S.slice(9, 10);\n    }\n    return this.simplifyCode;\n  }\n\n  getAutoPowerOffCode() {\n    if (!this.autoPowerOffCode) {\n      this.autoPowerOffCode = this.S.slice(11, 12);\n    }\n    return this.autoPowerOffCode;\n  }\n\n  getTableTypeCode() {\n    if (!this.tableTypeCode) {\n      this.tableTypeCode = this.S.slice(12, 13);\n    }\n    return this.tableTypeCode;\n  }\n\n  getEngineerSymbolCode() {\n    if (!this.engineerSymbolCode) {\n      this.engineerSymbolCode = this.S.slice(13, 14);\n    }\n    return this.engineerSymbolCode;\n  }\n\n  getDigitSeparatorCode() {\n    if (!this.digitSeparatorCode) {\n      this.digitSeparatorCode = this.S.slice(14, 15);\n    }\n    return this.digitSeparatorCode;\n  }\n\n  getMultiLineFontCode() {\n    if (!this.multiLineFontCode) {\n      this.multiLineFontCode = this.S.slice(15, 16);\n    }\n    return this.multiLineFontCode;\n  }\n\n\n  getEquationComplexRootCode() {\n    if (!this.equationComplexRootCode) {\n      this.equationComplexRootCode = this.S.slice(16, 17);\n    }\n    return this.equationComplexRootCode;\n  }\n\n  getLanguageCode() {\n    if (!this.languageCode) {\n      if (this.isFullSetup()) {\n        this.languageCode = this.S.slice(17, 18);\n      } else {\n        this.languageCode = this.S.slice(0, 1);\n      }\n    }\n    return this.languageCode;\n  }\n\n  getSpreadsheetAutoCalcCode() {\n    if (!this.spreadsheetAutoCalcCode) {\n      this.spreadsheetAutoCalcCode = this.S.slice(18, 19);\n    }\n    return this.spreadsheetAutoCalcCode;\n  }\n\n  getSpreadsheetShowCellCode() {\n    if (!this.spreadsheetShowCellCode) {\n      this.spreadsheetShowCellCode = this.S.slice(19, 20);\n    }\n    return this.spreadsheetShowCellCode;\n  }\n\n  getQRCodeVersionCode() {\n    if (!this.qrCodeVersionCode) {\n      this.qrCodeVersionCode = this.S.slice(20, 21);\n    }\n    return this.qrCodeVersionCode;\n  }\n\n  getAlgorithmBackgroundCode() {\n    if (!this.algorithmBackgroundCode) {\n      this.algorithmBackgroundCode = this.S.slice(21, 22);\n    }\n    return this.algorithmBackgroundCode;\n  }\n\n  getAlgorithmUnitSettingCode() {\n    if (!this.algorithmUnitSettingCode) {\n      this.algorithmUnitSettingCode = this.S.slice(22, 23);\n    }\n    return this.algorithmUnitSettingCode;\n  }\n\n  parseAll() {\n    const parseNumberFormat = () => {\n      const main = this.getNumberFormatMainCode();\n      const sub = this.getNumberFormatSubCode();\n      const name = translate(setupInfo['NUMBER_FORMAT'].name);\n      let value = translate(setupInfo['NUMBER_FORMAT']['setup'][main]);\n      if (['8', '9'].includes(main)) {\n        for (let i = 0; i < value.length; i++) {\n          value[i].name += sub;\n        }\n      }\n      return { name, value };\n    }\n\n    const parseInputOutput = () => {\n      const code = this.getInputCode() + this.getOutputCode();\n      const name = translate(setupInfo['INPUT_OUTPUT'].name);\n      const value = translate(setupInfo['INPUT_OUTPUT']['setup'][code]);\n      return { name, value };\n    }\n\n    const parseCommon = (type, code) => {\n      const name = translate(setupInfo[type].name);\n      const setupValue = setupInfo[type]['setup'][code];\n      const value = setupValue ? translate(setupValue) : code;\n      return { name, value };\n    }\n\n    const setupMap = {\n      \"DECIMAL_MARK\": this.getDecimalMarkCode(),\n      \"ANGLE_UNIT\": this.getAngleUnitCode(),\n      \"FRACTION_RESULT\": this.getFractionResultCode(),\n      \"COMPLEX_RESULT\": this.getComplexResultCode(),\n      \"STATISTICS_FREQUENCY\": this.getStatisticsFrequencyCode(),\n      \"RECURRING_DECIMAL\": this.getRecurringDecimalCode(),\n      \"SIMPLIFY\": this.getSimplifyCode(),\n      \"AUTO_POWER_OFF\": this.getAutoPowerOffCode(),\n      \"TABLE_TYPE\": this.getTableTypeCode(),\n      \"ENGINEER_SYMBOL\": this.getEngineerSymbolCode(),\n      \"DIGIT_SEPARATOR\": this.getDigitSeparatorCode(),\n      \"MULTI_LINE_FONT\": this.getMultiLineFontCode(),\n      \"EQUATION_COMPLEX_ROOT\": this.getEquationComplexRootCode(),\n      \"LANGUAGE\": this.getLanguageCode(),\n      \"SPREADSHEET_AUTO_CALC\": this.getSpreadsheetAutoCalcCode(),\n      \"SPREADSHEET_SHOW_CELL\": this.getSpreadsheetShowCellCode(),\n      \"QR_CODE_VERSION\": this.getQRCodeVersionCode(),\n      \"ALGORITHM_BACKGROUND\": this.getAlgorithmBackgroundCode(),\n      \"ALGORITHM_UNIT_SETTING\": this.getAlgorithmUnitSettingCode(),\n    }\n\n    const result = [];\n    if (this.isFullSetup()) {\n      result.push(parseNumberFormat());\n      result.push(parseInputOutput());\n      for (const [code, setup] of Object.entries(setupMap)) {\n        result.push(parseCommon(code, setup));\n      }\n    } else {\n      // in menu/error, only language is exported\n      result.push(parseCommon('LANGUAGE', this.getLanguageCode()));\n    }\n    return result;\n  }\n}\n","import { AsciiTable, mathTemplate, recDecOverlineModel, recDecBracketModel } from \"../ascii/index.js\";\nimport { ParseMode } from \"../mode/index.js\";\nimport { ParseSetup } from \"../setup/index.js\";\n\nexport class ParseExpression {\n  constructor(E, modelType, modelId) {\n    this.E = E;\n    this.modelType = modelType;\n    this.modelId = modelId;\n    this.asciiTable = new AsciiTable(modelType, modelId).get();\n  }\n\n  parseLine() {\n    const asciiArray = this.E.match(/F[\\dA-F]{3}|[\\dA-F]{2}/g);\n    const result = [];\n    for (let i = 0; i < asciiArray.length; i++) {\n      result.push(this.asciiTable[asciiArray[i]]);\n    }\n    return result.join(' ');\n  }\n\n  _setRecDecType() {\n    if (recDecOverlineModel.includes(`${this.modelType}${this.modelId}`)) {\n      this.recDecType = 1;\n    } else if (recDecBracketModel.includes(`${this.modelType}${this.modelId}`)) {\n      this.recDecType = 2;\n    } else {\n      this.recDecType = 0;\n    }\n  }\n\n  _parseToTree() {\n    let text = this.E;\n    text = text.replaceAll('1F1D1A', '1A');\n    text = text.replaceAll('1D1A', '1A');\n    text = text.replaceAll('1B1E', '1B');\n    text = text.replaceAll('1B1A', '1C');\n    const asciiArray = text.match(/F[\\dA-F]{3}|[\\dA-F]{2}/g);\n    let result = '[';\n    for (let i = 0; i < asciiArray.length; i++) {\n      const cur = asciiArray[i];\n      const next = i + 1 < asciiArray.length ? asciiArray[i + 1] : null;\n      if (mathTemplate.includes(cur) && next === '1A') {\n        result += `{\"${cur}\": [`;\n        continue;\n      }\n      if (cur === '1A') {\n        result += `[`;\n        continue;\n      }\n      if (cur === '1C') {\n        result = result.endsWith(', ') ? result.slice(0, -2) : result;\n        result += `], [`;\n        continue;\n      }\n      if (cur === '1B') {\n        result = result.endsWith(', ') ? result.slice(0, -2) : result;\n        result += `]]}, `;\n        continue;\n      }\n      result += `\"${cur}\", `;\n    }\n    result = result.endsWith(', ') ? result.slice(0, -2) : result;\n    result += ']';\n    result = JSON.parse(result);\n    return result;\n  }\n\n  _parseToLatex(tree) {\n    let result = \"\";\n    if (typeof tree === 'string') {\n      return this.asciiTable[tree];\n    }\n\n    if (Array.isArray(tree)) {\n      return tree.map(item => this._parseToLatex(item)).join('');\n    }\n\n    if (typeof tree === 'object') {\n      const keys = Object.keys(tree);\n      for (let i = 0; i < keys.length; i++) {\n        const curKey = keys[i];\n        const curVal = tree[curKey];\n        const a = this._parseToLatex(curVal[0]);\n        const b = curVal[1] ? this._parseToLatex(curVal[1]) : ' ';\n        const c = curVal[2] ? this._parseToLatex(curVal[2]) : ' ';\n        switch (curKey) {\n          case '18':\n            result += `{${a}} \\\\dfrac {\\\\displaystyle ${b}} {\\\\displaystyle ${c}} `;\n            break;\n          case '2F':\n            if (!this.recDecType) {\n              const n = a.replaceAll(' ', '');\n              if (n.length === 1) {\n                result += `\\\\dot{${n}} `;\n                break;\n              } else {\n                const first = n[0];\n                const last = n[n.length - 1];\n                const middle = n.slice(1, -1);\n                result += `\\\\dot{${first}}${middle}\\\\dot{${last}} `;\n                break;\n              }\n            } else if (this.recDecType === 1) {\n              result += `\\\\overline{${a}} `;\n              break;\n            } else if (this.recDecType === 2) {\n              result += `\\\\left( ${a} \\\\right) `;\n              break;\n            }\n            break;\n          case '50':\n            result += `\\\\sum_{x=${b}}^{${c}}{(${a})} `;\n            break;\n          case '51':\n            result += `\\\\int_{${b}}^{${c}}{${a}}\\\\mathrm{d}x `;\n            break;\n          case '52':\n            result += `\\\\dfrac{\\\\mathrm{d}}{\\\\mathrm{d}x} {(${a})} \\\\Bigg|_{x=${b}} `;\n            break;\n          case '53':\n            result += `\\\\prod_{x=${b}}^{${c}}{(${a})} `;\n            break;\n          case '68':\n            result += `\\\\left | ${a} \\\\right | `;\n            break;\n          case '72':\n            result += `e^{${a}} `;\n            break;\n          case '73':\n            result += `10^{${a}} `;\n            break;\n          case '74':\n            result += `\\\\sqrt{${a}} `;\n            break;\n          case '7D':\n            result += `\\\\log_{${a}}{(${b})} `;\n            break;\n          case 'C8':\n            result += `\\\\dfrac{\\\\displaystyle ${a}} {\\\\displaystyle ${b}} `;\n            break;\n          case 'C9':\n            result += `^{${a}} `;\n            break;\n          case 'CA':\n            result += `\\\\sqrt[${a}]{${b}} `;\n            break;\n        }\n      }\n      return result;\n    }\n  }\n\n  parseMath() {\n    this._setRecDecType();\n    try {\n      const tree = this._parseToTree();\n      return this._parseToLatex(tree);\n    } catch (e) {\n      return this.parseLine();\n    }\n  }\n\n  autoParse(M, S) {\n    if (['88', '89', 'C1', 'C4'].includes(new ParseMode(M).getMainMode()) && new ParseSetup(S).getInputCode() === '1') {\n      return this.parseMath();\n    }\n    return this.parseLine();\n  }\n}\n","/*!\r\n *  decimal.js v10.4.3\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or ±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var halfPi,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.asin();\r\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return halfPi.minus(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'lt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'gt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is ±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with different signs.\r\n    // Return NaN if both are ±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is ±Infinity or x is ±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with the same sign.\r\n    // Return NaN if both are ±Infinity with different signs.\r\n    // Return y if x is finite and y is ±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, ±Infinity or ±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n      ? NaN\r\n\r\n      // Return ±Infinity if either is ±Infinity.\r\n      // Return ±0 if either is ±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, ±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either ±Infinity, NaN or ±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n */\r\nfunction maxOrMin(Ctor, args, ltgt) {\r\n  var y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    } else if (x[ltgt](y)) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// ±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|Decimal} The y-coordinate.\r\n * x {number|string|Decimal} The x-coordinate.\r\n *\r\n * atan2(±0, -0)               = ±pi\r\n * atan2(±0, +0)               = ±0\r\n * atan2(±0, -x)               = ±pi for x > 0\r\n * atan2(±0, x)                = ±0 for x > 0\r\n * atan2(-y, ±0)               = -pi/2 for y > 0\r\n * atan2(y, ±0)                = pi/2 for y > 0\r\n * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n * atan2(±Infinity, +Infinity) = ±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both ±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is ±Infinity or y is ±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is ±Infinity or x is ±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|Decimal}\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n\r\n      // Infinity, NaN.\r\n      } else if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n\r\n    } else if (t !== 'string') {\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    // Minus sign?\r\n    if ((i = v.charCodeAt(0)) === 45) {\r\n      v = v.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      // Plus sign?\r\n      if (i === 43) v = v.slice(1);\r\n      x.s = 1;\r\n    }\r\n\r\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|Decimal} The argument of the logarithm.\r\n * y {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, 'lt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 'gt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The base.\r\n * y {number|string|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n","import Decimal from \"decimal.js\";\nimport { menuInfo } from '../mode/menu.js';\n\nexport class ParseVariable {\n  constructor(variable) {\n    this.val = variable;\n    this._parseProperty();\n  }\n\n  _parseProperty() {\n    this.valType = this.val.slice(0, 1);\n    this.valSign = this.val.slice(-3, -2);\n    this.valExp = this.val.slice(-3);\n    this.valNum = this.val.slice(1, -3);\n  }\n\n  _toDecimal() {\n    const exp = this.valExp < 500 ? this.valExp - 100 : this.valExp - 600;\n    let numSign, int, dec;\n    numSign = this.valSign < 5 ? '' : '-';\n    int = this.valNum.slice(0, 1);\n    dec = this.valNum.slice(1);\n    const result = `${numSign}${int}.${dec}E${exp}`;\n    const numDec = new Decimal(result);\n    const numLatex = numberToLatex(numDec);\n    return [numLatex, numDec];\n  }\n\n  _toFrac() {\n    const numSign = this.valSign < 5 ? '' : '-';\n    const signFix = this.valSign < 5 ? 1 : -1;\n    const fracArr = this.valNum.slice(0, this.valExp % 100).split('A');\n    const a = fracArr[0];\n    const b = fracArr[1];\n    const c = fracArr[2] || '';\n    let fracLatex, fracDec;\n    if (fracArr.length === 2) {\n      fracDec = new Decimal(a).div(b).mul(signFix);\n      fracLatex = `${numSign} \\\\dfrac {\\\\displaystyle ${a}} {\\\\displaystyle ${b}}`;\n    } else if (fracArr.length === 3) {\n      fracDec = new Decimal(a).add(new Decimal(b).div(c)).mul(signFix);\n      fracLatex = `${numSign} {\\\\displaystyle ${a}} \\\\dfrac {\\\\displaystyle ${b}} {\\\\displaystyle ${c}}`;\n    }\n    return [fracLatex, fracDec];\n  }\n\n  _toDMS() {\n    const [, decimal] = this._toDecimal();\n    const d = decimal.floor();\n    const mm = decimal.sub(d).times(60);\n    const m = mm.floor();\n    const s = mm.sub(m).times(60).toFixed(2);    // seems the accuracy is not enough\n    const dms = `${d}^\\\\circ ${m}' ${s}'' `;\n    return [dms, decimal];\n  }\n\n  _toSqrt() {\n    // TODO: get common denominator\n    const toOneSqrt = (sqrt) => {\n      const r = new Decimal(sqrt.slice(0, 3));\n      const a = new Decimal(sqrt.slice(3, 5));\n      const b = new Decimal(sqrt.slice(5, 7));\n      let latex, decimal;\n      if (a.isZero() || r.isZero() || b.isZero()) {\n        latex = '0';\n        decimal = new Decimal(0);\n      } else if (r.eq(1)) {\n        if (b.eq(1)) {\n          latex = `${a} `;\n        } else {\n          latex = `\\\\dfrac {\\\\displaystyle ${a}} {\\\\displaystyle ${b}}`;\n        }\n        decimal = a.div(b);\n      } else {\n        const aLatex = a.eq(1) ? '' : a;\n        if (b.eq(1)) {\n          latex = `${aLatex} \\\\sqrt{${r}} `;\n        } else {\n          latex = `\\\\dfrac {\\\\displaystyle ${aLatex} \\\\sqrt{${r}} } {\\\\displaystyle ${b}}`;\n        }\n        decimal = a.mul(r.sqrt()).div(b);\n      }\n      return [latex, decimal];\n    }\n\n    const a = this.valNum.slice(0, 7);\n    const b = this.valNum.slice(8, 15);\n    const aSign = this.valExp.slice(-3, -2) === '1';\n    const bSign = this.valExp.slice(-1) !== '6';\n    const [aLatex, aDecimal] = toOneSqrt(a);\n    const [bLatex, bDecimal] = toOneSqrt(b);\n    let latex, decimal;\n    if (!aDecimal.eq(0) && !bDecimal.eq(0)) {\n      if (aSign && bSign) {\n        latex = `${aLatex}+${bLatex}`;\n        decimal = aDecimal.add(bDecimal);\n      } else if (aSign && !bSign) {\n        latex = `${aLatex}-${bLatex}`;\n        decimal = aDecimal.sub(bDecimal);\n      } else if (!aSign && bSign) {\n        latex = `-${aLatex}+${bLatex}`;\n        decimal = bDecimal.sub(aDecimal);\n      } else {\n        latex = `-${aLatex}-${bLatex}`;\n        decimal = aDecimal.add(bDecimal).neg();\n      }\n    } else {\n      decimal = !aDecimal.eq(0) ? aDecimal : bDecimal;\n      latex = !aDecimal.eq(0) ? aLatex : bLatex;\n      const sign = !aDecimal.eq(0) ? aSign : bSign;\n      latex = sign ? latex : `-${latex}`;\n      decimal = sign ? decimal : decimal.neg();\n    }\n    return [latex, decimal];\n  }\n\n  _toError() {\n    const errCode = `Y${this.val.slice(1, 2)}`;\n    return [menuInfo[errCode].name.en, NaN];\n  }\n\n  get() {\n    switch (this.valType) {\n      case '0':\n        return this._toDecimal();\n      case '2':\n        return this._toFrac();\n      case '4':\n        return this._toDMS();\n      case '8':\n        return this._toSqrt();\n      case 'F':\n        return this._toError();\n    }\n  }\n}\n\nconst numberToLatex = (num) => {\n  const decimalNum = new Decimal(num);\n  const expSplit = decimalNum.toString().split('e');\n  let latex;\n  if (expSplit.length === 1) {\n    latex = expSplit[0];\n  } else {\n    const int = expSplit[0];\n    const exp = expSplit[1].replace('+', '');\n    latex = `${int}\\\\times 10^{${exp}}`;\n  }\n  return latex;\n}\n","export const inputInfo = {\n  \"EQUATION\": {\n    \"01\": {\n      \"template\": \"\\\\left\\\\{\\\\begin{array}{l}${0}x${1}y=${2}\\\\\\\\${3}x${4}y=${5}\\\\end{array}\\\\right.\",\n      \"omitPlus\": [0, 2, 3, 5],\n      \"coefficient\": [2, 3],\n    },\n    \"02\": {\n      \"template\": \"\\\\left\\\\{\\\\begin{array}{l}${0}x${1}y${2}z=${3}\\\\\\\\${4}x${5}y${6}z=${7}\\\\\\\\${8}x${9}y${10}z=${11}\\\\end{array}\\\\right.\",\n      \"omitPlus\": [0, 3, 4, 7, 8, 11],\n      \"coefficient\": [3, 4],\n    },\n    \"03\": {\n      \"template\": \"\\\\left\\\\{\\\\begin{array}{l}${0}x${1}y${2}z${3}t=${4}\\\\\\\\${5}x${6}y${7}z${8}t=${9}\\\\\\\\${10}x${11}y${12}z${13}t=${14}\\\\\\\\${15}x${16}y${17}z${18}t=${19}\\\\end{array}\\\\right.\",\n      \"omitPlus\": [0, 4, 5, 9, 10, 14, 15, 19],\n      \"coefficient\": [4, 5],\n    },\n    \"04\": {\n      \"template\": \"${0}x^2${1}x${2}=0\",\n      \"omitPlus\": [0],\n      \"coefficient\": [1, 3],\n    },\n    \"05\": {\n      \"template\": \"${0}x^3${1}x^2${2}x${3}=0\",\n      \"omitPlus\": [0],\n      \"coefficient\": [1, 4],\n    },\n    \"06\": {\n      \"template\": \"${0}x^4${1}x^3${2}x^2${3}x${4}=0\",\n      \"omitPlus\": [0],\n      \"coefficient\": [1, 5],\n    }\n  },\n  \"RATIO\": {\n    \"01\": {\n      \"template\": \"${0}:${1}=X:${2}\",\n    },\n    \"02\": {\n      \"template\": \"${0}:${1}=${2}:X\",\n    }\n  },\n  \"INEQUALITY\": {\n    \"0400\": {\n      \"template\": \"${0}x^2${1}x${2}>0\"\n    },\n    \"0401\": {\n      \"template\": \"${0}x^2${1}x${2}<0\"\n    },\n    \"0402\": {\n      \"template\": \"${0}x^2${1}x${2}≥0\"\n    },\n    \"0403\": {\n      \"template\": \"${0}x^2${1}x${2}≤0\"\n    },\n    \"0500\": {\n      \"template\": \"${0}x^3${1}x^2${2}x${3}>0\"\n    },\n    \"0501\": {\n      \"template\": \"${0}x^3${1}x^2${2}x${3}<0\"\n    },\n    \"0502\": {\n      \"template\": \"${0}x^3${1}x^2${2}x${3}≥0\"\n    },\n    \"0503\": {\n      \"template\": \"${0}x^3${1}x^2${2}x${3}≤0\"\n    },\n    \"0600\": {\n      \"template\": \"${0}x^4${1}x^3${2}x^2${3}x${4}>0\"\n    },\n    \"0601\": {\n      \"template\": \"${0}x^4${1}x^3${2}x^2${3}x${4}<0\"\n    },\n    \"0602\": {\n      \"template\": \"${0}x^4${1}x^3${2}x^2${3}x${4}≥0\"\n    },\n    \"0603\": {\n      \"template\": \"${0}x^4${1}x^3${2}x^2${3}x${4}≤0\"\n    }\n  },\n  \"DISTRIBUTION\": {\n    \"01\": {\n      \"3\": {\n        \"template\": \"x=${0} \\\\\\\\ μ=${1} \\\\\\\\ σ=${2}\"\n      }\n    },\n    \"02\": {\n      \"4\": {\n        \"template\": {\n          \"en\": \"Lower=${0} \\\\\\\\ Upper=${1} \\\\\\\\ μ=${2} \\\\\\\\ σ=${3}\",\n          \"zh\": \"下限=${0} \\\\\\\\ 上限=${1} \\\\\\\\ μ=${2} \\\\\\\\ σ=${3}\",\n          \"vi\": \"Ldưới=${0} \\\\\\\\ Ltrên=${1} \\\\\\\\ μ=${2} \\\\\\\\ σ=${3}\",\n        }\n      }\n    },\n    \"03\": {\n      \"3\": {\n        \"template\": {\n          \"en\": \"Area=${0} \\\\\\\\ μ=${1} \\\\\\\\ σ=${2}\",\n          \"zh\": \"区域=${0} \\\\\\\\ μ=${1} \\\\\\\\ σ=${2}\",\n          \"vi\": \"Vùng=${0} \\\\\\\\ μ=${1} \\\\\\\\ σ=${2}\",\n        }\n      }\n    },\n    \"04\": {\n      \"2\": {\n        \"template\": \"N=${0} \\\\\\\\ p=${1}\"\n      },\n      \"3\": {\n        \"template\": \"x=${0} \\\\\\\\ N=${1} \\\\\\\\ p=${2}\"\n      }\n    },\n    \"05\": {\n      \"2\": {\n        \"template\": \"N=${0} \\\\\\\\ p=${1}\"\n      },\n      \"3\": {\n        \"template\": \"x=${0} \\\\\\\\ N=${1} \\\\\\\\ p=${2}\"\n      }\n    },\n    \"06\": {\n      \"1\": {\n        \"template\": \"λ=${0}\"\n      },\n      \"2\": {\n        \"template\": \"x=${0} \\\\\\\\ λ=${1}\"\n      }\n    },\n    \"07\": {\n      \"1\": {\n        \"template\": \"λ=${0}\"\n      },\n      \"2\": {\n        \"template\": \"x=${0} \\\\\\\\ λ=${1}\"\n      }\n    }\n  }\n}","import { ParseVariable } from \"./index.js\";\nimport { inputInfo } from './input.js';\nimport { ParseMode } from \"../mode/index.js\";\nimport { translate } from \"../utils.js\";\n\nconst ParseMatrix = (matrix, m, n) => {\n  const split = matrix.match(/.{20}/g);\n  if (m * n !== split.length) {\n    throw new Error('Matrix size not match');\n  }\n\n  const decimalResult = [];\n  const element = [];\n  let latexResult = '\\\\begin{bmatrix}';\n  for (let i = 0; i < m; i++) {\n    const row = [];\n    for (let j = 0; j < n; j++) {\n      const [latex, decimal] = new ParseVariable(split[i * n + j]).get();\n      row.push(latex);\n      decimalResult.push(decimal);\n      latexResult += `${latex} & `;\n    }\n    element.push(row);\n    latexResult = latexResult.slice(0, -2);\n    if (i !== m - 1) {\n      latexResult += '\\\\\\\\';\n    }\n  }\n  latexResult += '\\\\end{bmatrix}';\n  return [latexResult, decimalResult, element];\n}\n\nexport const ParseMatrixList = (C) => {\n  const regx = /M([A-DT])(\\d)(\\d)([\\dA]+)/g;\n  let match;\n  const result = [];\n  while ((match = regx.exec(C)) !== null) {\n    const name = match[1] === 'T' ? `MatAns` : `Mat${match[1]}`;\n    let m = parseInt(match[2]);\n    let n = parseInt(match[3]);\n    const [latex, decimal, element] = ParseMatrix(match[4], m, n);\n    result.push({ name, latex, decimal, element });\n  }\n  return result;\n}\n\nconst ParseVector = (vector, n) => {\n  const split = vector.match(/.{20}/g);\n  if (n !== split.length) {\n    throw new Error('Vector size not match');\n  }\n\n  const decimalResult = [];\n  const element = [];\n  let latexResult = '\\\\begin{bmatrix}';\n  for (let i = 0; i < n; i++) {\n    const [latex, decimal] = new ParseVariable(split[i]).get();\n    decimalResult.push(decimal);\n    element.push(latex);\n    latexResult += `${latex}`;\n    if (i !== n - 1) {\n      latexResult += ' \\\\\\\\ ';\n    }\n  }\n  latexResult += '\\\\end{bmatrix}';\n  return [latexResult, decimalResult, [element]];\n}\n\nexport const ParseVectorList = (C) => {\n  const regx = /V([A-CT])(\\d)(\\d)([\\dA]+)/g;\n  let match;\n  const result = [];\n  while ((match = regx.exec(C)) !== null) {\n    const name = match[1] === 'T' ? `VctAns` : `Vct${match[1]}`;\n    const n = parseInt(match[3]);\n    const [latex, decimal, element] = ParseVector(match[4], n);\n    result.push({ name, latex, decimal, element });\n  }\n  return result;\n}\n\nexport const ParseEquation = (M, C) => {\n  const split = C.match(/.{20}/g);\n  const parseM = new ParseMode(M);\n  const mainMode = parseM.getMainMode();\n  let subMode = parseM.getSubMode();\n  let equType, omitPlus, m, n;\n  switch (mainMode) {\n    case '45':\n      equType = 'EQUATION';\n      break;\n    case '4A':\n      equType = 'RATIO';\n      omitPlus = [0, 1, 2];\n      m = 1;\n      n = 3;\n      break;\n    case '4B':\n      equType = 'INEQUALITY';\n      omitPlus = [0];\n      m = 1;\n      n = subMode.slice(1, 2) - 1;\n      subMode += parseM.getInqType();\n      break;\n  }\n  omitPlus || (omitPlus = inputInfo[equType][subMode]['omitPlus']);\n  (m || n) || ([m, n] = inputInfo[equType][subMode]['coefficient']);\n  let template = inputInfo[equType][subMode].template;\n  const decimalResult = [];\n  const element = [];\n  let elementRow = [];\n  let i;\n  for (i = 0; i < split.length; i++) {\n    let [latex, decimal] = new ParseVariable(split[i]).get();\n    elementRow.push(latex);\n    decimalResult.push(decimal);\n    if (!omitPlus.includes(i) && decimal.gte(0)) {\n      latex = '+' + latex;\n    }\n    template = template.replace(`\\$\\{${i}\\}`, latex);\n    if ((i + 1) % n === 0) {\n      element.push(elementRow);\n      elementRow = [];\n    }\n  }\n  if (i !== m * n || template.includes('$')) {\n    throw new Error('Equation template not match');\n  }\n  return { latex: template, decimal: decimalResult, element };\n}\n\nexport const ParseDistribution = (M, C) => {\n  const subMode = new ParseMode(M).getSubMode();\n  const split = C.match(/.{20}/g);\n  const distInfo = inputInfo['DISTRIBUTION'][subMode][split.length];\n  let template = distInfo.template;\n  if (typeof template === 'object') {\n    template = translate(template);\n  }\n  const decimalResult = [];\n  for (let i = 0; i < split.length; i++) {\n    const [latex, decimal] = new ParseVariable(split[i]).get();\n    template = template.replace(`\\$\\{${i}\\}`, latex);\n    decimalResult.push(decimal);\n  }\n  return { latex: template, decimal: decimalResult };\n}\n","import { ParseVariable } from \"./index.js\";\nimport { ParseMode } from \"../mode/index.js\";\nimport { ParseSetup } from \"../setup/index.js\";\n\nexport const ParseSpreadsheet = (T) => {\n  const position = T.slice(2, 62).match(/[\\dA-F]{12}/g).map(t => {\n    return parseInt(t, 16).toString(2).padStart(48, '0').slice(0, 45);\n  });\n  const array = Array.from(Array(45), () => Array(5));\n  let k = 0;\n  for (let i = 0; i < position.length; i++) {\n    for (let j = 0; j < position[i].length; j++) {\n      const hasData = position[i][j] === '1';\n      if (hasData) {\n        const cell = T.slice(62 + 9 * k, 62 + 9 * (k + 1));\n        if (cell.match(/^[0-9]+$/)) {\n          const [, decimal] = new ParseVariable(`0${cell}`).get();\n          array[j][i] = decimal;\n        } else {\n          array[j][i] = new ParseVariable(cell).get()[0];\n        }\n        k++;\n      }\n    }\n  }\n  const csv = array.map(row => row.join(',')).join('\\n');\n  return { array, csv };\n}\n\nconst ParseCompressStatistic = (T) => {\n  return T.match(/.{6}/g).map(t => {\n    const data = t.match(/.{2}/g).map(tt => {\n      return parseInt(tt, 32).toString(10).padStart(3, '0')\n    }).join('')\n    const [, decimal] = new ParseVariable(`0${data}`).get();\n    return decimal;\n  });\n}\n\nconst ParseRawStatistic = (T) => {\n  return T.match(/.{9}/g).map(t => {\n    const [, decimal] = new ParseVariable(`0${t}`).get();\n    return decimal;\n  })\n}\n\nexport const ParseStatistic = (T, M, S) => {\n  const parseM = new ParseMode(M);\n  const mainMode = parseM.getMainMode();\n  const subMode = parseM.getSubMode();\n  const head = [];\n  let numList;\n  if (mainMode === '03') {\n    // Statistic Mode\n    head.push('x');\n    subMode !== '01' && head.push('y');\n    const freqOn = new ParseSetup(S).getStatisticsFrequencyCode() === '1';\n    freqOn && head.push('Freq');\n    numList = ParseCompressStatistic(T);\n  } else if (mainMode === '0C') {\n    // Distribution Mode\n    head.push('x');\n    head.push('P');\n    numList = ParseRawStatistic(T);\n  } else if (mainMode === '4F') {\n    // Math Box Mode\n    head.push('Freq');\n    numList = ParseCompressStatistic(T);\n  }\n  const array = [head];\n  for (let i = 0; i < numList.length; i++) {\n    if (i % head.length === 0) {\n      array.push([]);\n    }\n    array[array.length - 1].push(numList[i]);\n  }\n  const csv = array.map(row => row.join(',')).join('\\n');\n  return { array, csv };\n}\n","import { ParseVariable } from \"./index.js\";\nimport { MODEL_TYPE } from \"../model/index.js\";\n\nexport const ParseVariableList = (variable, modelType) => {\n  const varIndex = ['A', 'B', 'C', 'D', 'E', 'F', 'y'];\n  modelType === MODEL_TYPE.EY ? varIndex.push('z') : varIndex.push('M');\n  const split = variable.match(/.{9}/g);\n  const result = [];\n  for (let i = 0; i < split.length; i++) {\n    const [latex, decimal] = new ParseVariable(`0${split[i]}`).get();\n    result.push({ name: varIndex[i], latex, decimal });\n  }\n  return result;\n}\n","export const resultInfo = {\n  \"NUMBER\": {\n    \"11\": {\n      \"template\": \"x=${0},y=${1}\"\n    },\n    \"12\": {\n      \"template\": \"r=${0},θ=${1}\"\n    },\n    \"13\": {\n      \"template\": \"${2}=${0},L-R=${1}\"\n    },\n    \"14\": {\n      \"template\": \"a=${0},R=${1}\"\n    },\n    \"15\": {\n      \"template\": \"F=${1},a=${0}\"\n    }\n  },\n  \"INEQUALITY\": {\n    \"01\": {\n      \"name\": {\n        \"en\": \"All Real Numbers\",\n        \"zh\": \"所有实数\",\n        \"vi\": \"Tất cả số thực\"\n      }\n    },\n    \"02\": {\n      \"name\": {\n        \"en\": \"No Solution\",\n        \"zh\": \"无解\",\n        \"vi\": \"Vô nghiệm\"\n      }\n    },\n    \"03\": {\n      \"template\": \"x=${0}\"\n    },\n    \"04\": {\n      \"template\": \"x≠${0}\"\n    },\n    \"05\": {\n      \"template\": \"x<${0}\"\n    },\n    \"06\": {\n      \"template\": \"x≤${0}\"\n    },\n    \"07\": {\n      \"template\": \"${0}<x\"\n    },\n    \"08\": {\n      \"template\": \"${0}≤x\"\n    },\n    \"09\": {\n      \"template\": \"${0}<x<${1}\"\n    },\n    \"0A\": {\n      \"template\": \"${0}≤x≤${1}\"\n    },\n    \"0B\": {\n      \"template\": \"x<${0}, ${1}<x\"\n    },\n    \"0C\": {\n      \"template\": \"x≤${0}, ${1}≤x\"\n    },\n    \"0D\": {\n      \"template\": \"x=${0}, ${1}≤x\"\n    },\n    \"0E\": {\n      \"template\": \"x≠${0} \\\\mathrm{and} x<${1}\"\n    },\n    \"0F\": {\n      \"template\": \"x≤${0}, x=${1}\"\n    },\n    \"10\": {\n      \"template\": \"${0}<x \\\\mathrm{and} x ≠${1}\"\n    },\n    \"11\": {\n      \"template\": \"${0}<x<${1}, ${2}<x\"\n    },\n    \"12\": {\n      \"template\": \"${0}≤x≤${1}, ${2}≤x\"\n    },\n    \"13\": {\n      \"template\": \"x<${0}, ${1}<x<${2}\"\n    },\n    \"14\": {\n      \"template\": \"x≤${0}, ${1}≤x≤${2}\"\n    },\n    \"15\": {\n      \"template\": \"x≠${0} \\\\mathrm{and} x≠${1}\"\n    },\n    \"16\": {\n      \"template\": \"x=${0}, x=${1}\"\n    },\n    \"17\": {\n      \"template\": \"x≠${0} \\\\mathrm{and} x<${1}, ${2}<x\"\n    },\n    \"18\": {\n      \"template\": \"x=${0}, ${1}≤x≤${2}\"\n    },\n    \"19\": {\n      \"template\": \"${0}<x<${2} \\\\mathrm{and} x≠${1}\"\n    },\n    \"1A\": {\n      \"template\": \"x≤${0}, x=${1}, ${2}≤x\"\n    },\n    \"1B\": {\n      \"template\": \"x<${0}, ${1}<x, \\\\mathrm{and} x≠${2}\"\n    },\n    \"1C\": {\n      \"template\": \"${0}≤x≤${1}, x=${2}\"\n    },\n    \"1D\": {\n      \"template\": \"${0}<x<${1}, ${2}<x<${3}\"\n    },\n    \"1E\": {\n      \"template\": \"x<${0}, ${1}<x<${2}, ${3}<x\"\n    },\n    \"1F\": {\n      \"template\": \"${0}≤x≤${1}, ${2}≤x≤${3}\"\n    },\n    \"20\": {\n      \"template\": \"x≤${0}, ${1}≤x≤${2}, ${3}≤x\"\n    }\n  },\n  \"EQUATION\": {\n    \"0\": {\n      \"01\": {\n        \"template\": \"x=${0}\\\\\\\\y=${1}\"\n      },\n      \"02\": {\n        \"template\": \"x=${0}\\\\\\\\y=${1}\\\\\\\\z=${2}\"\n      },\n      \"03\": {\n        \"template\": \"x=${0}\\\\\\\\y=${1}\\\\\\\\z=${2}\\\\\\\\t=${3}\"\n      },\n      \"04\": {\n        \"2\": {\n          \"template\": \"x=${0}\"\n        },\n        \"4\": {\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\"\n        },\n        \"6\": {\n          \"template\": \"x=${0}\\\\\\\\x_{${EXT}}=${1}\\\\\\\\y_{${EXT}}=${2}\"\n        },\n        \"8\": {\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\\\\\\\\x_{${EXT}}=${2}\\\\\\\\y_{${EXT}}=${3}\"\n        }\n      },\n      \"05\": {\n        \"2\": {\n          \"complexSetting\": false,\n          \"template\": \"x=${0}\"\n        },\n        \"4\": {\n          \"complexSetting\": false,\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\"\n        },\n        \"6\": {\n          \"complexSetting\": true,\n          \"template\": {\n            \"0\": \"x=${0}\\\\\\\\x_{max}=${1}\\\\\\\\y_{max}=${2}\\\\\\\\x_{min}=${3}\\\\\\\\y_{min}=${4}\",\n            \"1\": \"x_1=${0}\\\\\\\\x_2=${1}\\\\\\\\x_3=${2}\"\n          }\n        },\n        \"8\": {\n          \"complexSetting\": false,\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\\\\\\\\x_{max}=${2}\\\\\\\\y_{max}=${3}\\\\\\\\x_{min}=${4}\\\\\\\\y_{min}=${5}\"\n        },\n        \"10\": {\n          \"complexSetting\": false,\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\\\\\\\\x_3=${2}\\\\\\\\x_{max}=${3}\\\\\\\\y_{max}=${4}\\\\\\\\x_{min}=${5}\\\\\\\\y_{min}=${6}\"\n        }\n      },\n      \"06\": {\n        \"2\": {\n          \"template\": \"x=${0}\"\n        },\n        \"4\": {\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\"\n        },\n        \"6\": {\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\\\\\\\\x_3=${2}\"\n        },\n        \"8\": {\n          \"template\": \"x_1=${0}\\\\\\\\x_2=${1}\\\\\\\\x_3=${2}\\\\\\\\x_4=${3}\"\n        }\n      }\n    },\n    \"1\": {\n      \"name\": {\n        \"en\": \"Infinite Solution\",\n        \"zh\": \"无数解\",\n        \"vi\": \"Vô số nghiệm\"\n      }\n    },\n    \"2\": {\n      \"name\": {\n        \"en\": \"No Solution\",\n        \"zh\": \"无解\",\n        \"vi\": \"Vô nghiệm\"\n      }\n    },\n    \"4\": {\n      \"name\": {\n        \"en\": \"No Real Roots\",\n        \"zh\": \"无实根\",\n        \"vi\": \"Vô nghiệm\"\n      }\n    },\n    \"5\": {\n      \"name\": {\n        \"en\": \"No Local Max/Min\",\n        \"zh\": \"无极值\",\n        \"vi\": \"Không có CĐ/CT\"\n      }\n    }\n  },\n  \"STATISTICS\": {\n    \"ONE-VAR\": {\n      \"template\": \"\\\\bar{x}=${0} \\\\\\\\ \\\\rm{\\\\Sigma}x=${1} \\\\\\\\ \\\\rm{\\\\Sigma}x^2=${2} \\\\\\\\ \\\\rm{\\\\sigma}^2x=${3} \\\\\\\\ \\\\rm{\\\\sigma}x=${4} \\\\\\\\ \\\\rm{s}^2x=${5} \\\\\\\\ \\\\rm{s}x=${6} \\\\\\\\ n=${7} \\\\\\\\ \\\\rm{min}(x)=${8} \\\\\\\\ \\\\rm{Q}_{1}=${9} \\\\\\\\ \\\\rm{Med}=${10} \\\\\\\\ \\\\rm{Q}_3=${11} \\\\\\\\ \\\\rm{max}(x)=${12}\"\n    },\n    \"TWO-VAR\": {\n      \"template\": \"\\\\bar{x}=${0} \\\\\\\\ \\\\rm{\\\\Sigma}x=${1} \\\\\\\\ \\\\rm{\\\\Sigma}x^2=${2} \\\\\\\\ \\\\rm{\\\\sigma}^2x=${3} \\\\\\\\ \\\\rm{\\\\sigma}x=${4} \\\\\\\\ \\\\rm{s}^2x=${5} \\\\\\\\ \\\\rm{s}x=${6} \\\\\\\\ n=${7} \\\\\\\\ \\\\bar{y}=${8} \\\\\\\\ \\\\rm{\\\\Sigma}y=${9} \\\\\\\\ \\\\rm{\\\\Sigma}y^2=${10} \\\\\\\\ \\\\rm{\\\\sigma}^2y=${11} \\\\\\\\ \\\\rm{\\\\sigma}y=${12} \\\\\\\\ \\\\rm{s}^2y=${13} \\\\\\\\ \\\\rm{s}y=${14} \\\\\\\\ \\\\rm{\\\\Sigma}xy=${15} \\\\\\\\ \\\\rm{\\\\Sigma}x^3=${16} \\\\\\\\ \\\\rm{\\\\Sigma}x^2y=${17} \\\\\\\\ \\\\rm{\\\\Sigma}x^4=${18} \\\\\\\\ \\\\rm{min}(x)=${19} \\\\\\\\ \\\\rm{max}(x)=${20} \\\\\\\\ \\\\rm{min}(y)=${21} \\\\\\\\ \\\\rm{max}(y)=${22}\"\n    }\n  }\n}","import { ParseVariable } from \"./index.js\";\nimport { AsciiTable } from \"../ascii/index.js\";\nimport { ParseMode } from \"../mode/index.js\";\nimport { resultInfo } from './result.js';\nimport { modeInfo } from '../mode/mode.js';\nimport { ParseSetup } from \"../setup/index.js\";\nimport { translate } from \"../utils.js\";\n\nexport const ParseNumberResult = (R, M, modelType, modelId) => {\n  const parseM = new ParseMode(M);\n  const ans1 = R.slice(0, R.length / 2);\n  const ans2 = R.slice(R.length / 2);\n  const [ans1Latex, ans1Decimal] = new ParseVariable(ans1).get();\n  const [ans2Latex, ans2Decimal] = new ParseVariable(ans2).get();\n\n  let template = resultInfo['NUMBER'][parseM.getResultTemplate()];\n  let result = [];\n  if (!template) {\n    if (ans2Decimal.eq(0)) {\n      template = ans1Latex;\n    } else if (ans2Decimal.eq(1)) {\n      template = `${ans1Latex} + i`;\n    } else if (ans2Decimal.gt(0)) {\n      template = `${ans1Latex} + ${ans2Latex}i`;\n    } else if (ans2Decimal.eq(-1)) {\n      template = `${ans1Latex} - i`;\n    } else {\n      template = `${ans1Latex} ${ans2Latex}i`;\n    }\n  } else {\n    template = template.template;\n    template = template.replace('${0}', ans1Latex);\n    template = template.replace('${1}', ans2Latex);\n    if (template.includes('${2}')) {\n      const varCode = parseM.getSolveFor();\n      const asciiTable = new AsciiTable(modelType, modelId).get();\n      const varAscii = asciiTable[varCode];\n      template = template.replace('${2}', varAscii);\n    }\n  }\n  result.push({ name: 'templated', latex: template });\n  result.push({ name: 'Part1', latex: ans1Latex, decimal: ans1Decimal })\n  result.push({ name: 'Part2', latex: ans2Latex, decimal: ans2Decimal })\n  return result;\n}\n\nexport const ParseInequalityResult = (R) => {\n  const resultCode = R.slice(2, 4);\n  const result = resultInfo['INEQUALITY'][resultCode];\n  if (!result.template) {\n    return { name: translate(result.name) };\n  }\n  const split = R.slice(4).match(/.{20}/g);\n  let template = result.template;\n  const returnResult = [];\n  for (let i = 0; i < split.length; i++) {\n    const [latex, decimal] = new ParseVariable(split[i]).get();\n    template = template.replace(`\\$\\{${i}\\}`, latex);\n    returnResult.push({ name: `Part${i + 1}`, latex, decimal });\n  }\n  if (template.includes('$')) {\n    throw new Error('Inequality template not match');\n  }\n  returnResult.unshift({ name: 'templated', latex: template });\n  return returnResult;\n}\n\nexport const ParseEquationResult = (R, M, S, C) => {\n  let resultCode = R.slice(2, 3);\n  if (['1', '2', '4'].includes(resultCode)) {\n    return [{ name: 'templated', latex: translate(resultInfo['EQUATION'][resultCode].name) }];\n  }\n  const noLocal = resultCode === '5';\n  // when resultCode is '5', it still contains roots data, but indicates no Local Minimum/Maximum\n  // just set to 0 to get the template\n  resultCode = '0';\n\n  const split = R.slice(3).match(/.{20}/g);\n  let template;\n  const subMode = new ParseMode(M).getSubMode();\n  if (['01', '02', '03'].includes(subMode)) {\n    template = resultInfo['EQUATION'][resultCode][subMode].template;\n  } else {\n    if (resultInfo['EQUATION'][resultCode][subMode][split.length]['complexSetting']) {\n      const complexSetting = new ParseSetup(S).getComplexResultCode();\n      template = resultInfo['EQUATION'][resultCode][subMode][split.length].template[complexSetting];\n    } else {\n      template = resultInfo['EQUATION'][resultCode][subMode][split.length].template;\n    }\n  }\n\n  let result = [];\n  if (['01', '02', '03'].includes(subMode)) {\n    for (let i = 0; i < split.length; i++) {\n      const [latex, decimal] = new ParseVariable(split[i]).get();\n      template = template.replace(`\\$\\{${i}\\}`, latex);\n      result.push({ name: `Part${i + 1}`, latex, decimal });\n    }\n  } else {\n    let rootCount;\n    if (['04', '06'].includes(subMode) || ('05' === subMode && !template.includes('max'))) {\n      rootCount = split.length / 2;\n    } else {\n      rootCount = (split.length - 4) / 2;\n    }\n    for (let i = 0; i < rootCount; i++) {\n      const numberResult = ParseNumberResult(split[2 * i] + split[2 * i + 1], M);\n      const latex = numberResult[0].latex;\n      template = template.replace(`\\$\\{${i}\\}`, latex);\n      result.push({ name: `Part${2 * i + 1}`, latex: numberResult[1].latex, decimal: numberResult[1].decimal });\n      result.push({ name: `Part${2 * i + 2}`, latex: numberResult[2].latex, decimal: numberResult[2].decimal });\n    }\n    if ('05' === subMode && template.includes('max')) {\n      for (let i = 0; i < 4; i++) {\n        const [latex, decimal] = new ParseVariable(split[rootCount * 2 + i]).get();\n        template = template.replace(`\\$\\{${rootCount + i}\\}`, latex);\n        result.push({ name: `Part${rootCount * 2 + i + 1}`, latex, decimal });\n      }\n    }\n  }\n\n  if (template.includes('${EXT}')) {\n    const [, firstDecimal] = new ParseVariable(C.slice(0, 20)).get();\n    if (firstDecimal.gt(0)) {\n      template = template.replaceAll('${EXT}', 'min');\n    } else {\n      template = template.replaceAll('${EXT}', 'max');\n    }\n  }\n  if (template.includes('$')) {\n    throw new Error('Equation template not match');\n  }\n  if (noLocal) {\n    result.unshift(resultInfo['EQUATION']['5']);\n  }\n  result.unshift({ name: 'templated', latex: template });\n  return result;\n}\n\nexport const ParseStatisticResult = (R, M) => {\n  const split = R.match(/.{20}/g);\n  const parseM = new ParseMode(M);\n  const subMode = parseM.getSubMode();\n  const resultType = parseM.getResultTemplate();\n  let template;\n  const result = [];\n  switch (resultType) {\n    case 'F1':\n      template = resultInfo['STATISTICS']['ONE-VAR'].template;\n      break;\n    case 'F2':\n      template = resultInfo['STATISTICS']['TWO-VAR'].template;\n      break;\n    case 'F3':\n      template = modeInfo['03']['subMode'][subMode]['name']['en'].match(/\\[.*]/g)[0];\n      if (subMode === '03') {\n        template += ' \\\\\\\\ a=${0} \\\\\\\\ b=${1} \\\\\\\\ c=${2}';\n      } else {\n        template += ' \\\\\\\\ a=${0} \\\\\\\\ b=${1} \\\\\\\\ r=${2}';\n      }\n      break;\n  }\n  for (let i = 0; i < split.length; i++) {\n    const [latex, decimal] = new ParseVariable(split[i]).get();\n    template = template.replace(`\\$\\{${i}\\}`, latex);\n    result.push({ name: `Part${i + 1}`, latex, decimal });\n  }\n  if (template.includes('$')) {\n    throw new Error('Statistic template not match');\n  }\n  result.unshift({ name: 'templated', latex: template });\n  return result;\n}","import { ParseExpression } from \"./expression/index.js\";\nimport { getModelInfo, MODEL_TYPE } from \"./model/index.js\";\nimport { ParseMode } from \"./mode/index.js\";\nimport { ParseDistribution, ParseEquation, ParseMatrixList, ParseVectorList } from \"./variable/C.js\";\nimport { ParseSpreadsheet, ParseStatistic } from \"./variable/T.js\";\nimport { ParseTableRange } from \"./variable/P.js\";\nimport { ParseVariableList } from \"./variable/V.js\";\nimport { ParseEquationResult, ParseInequalityResult, ParseNumberResult, ParseStatisticResult } from \"./variable/R.js\";\nimport { ParseSetup } from \"./setup/index.js\";\nimport { availableLanguages } from \"./utils.js\";\n\nexport class ClassWizQR {\n  constructor() {\n    this.url = undefined;\n    this.modelType = undefined;\n    this.kv = {\n      I: undefined,\n      U: undefined,\n      M: undefined,\n      S: undefined,\n      R: undefined,\n      E: undefined,\n      T: undefined,\n      C: undefined,\n      G: undefined,\n      P: undefined,\n      V: undefined,\n      Q: undefined,\n    };\n    this.language = 'en';\n    globalThis.cwqrConfig = {};\n  }\n\n  setUrl(url, language) {\n    this.url = new URL(url.trim());\n    const { search, pathname } = this.url;\n    const modelType = pathname.slice(0, 5) === '/ncal' ? MODEL_TYPE.EY : MODEL_TYPE.CY;\n    const kv = search.slice(3).split('+').reduce((acc, cur) => {\n      const [k, v] = cur.split('-');\n      acc[k] = v;\n      return acc;\n    }, {});\n    this.setModelType(modelType);\n    this.setKV(kv);\n    availableLanguages.includes(language) ? this.setLanguage(language) : this.setLanguage('en');\n    return this;\n  }\n\n  setModelType(modelType) {\n    this.modelType = modelType;\n    return this;\n  }\n\n  setKV(kv) {\n    this.kv = kv;\n    return this;\n  }\n\n  setLanguage(language) {\n    this.language = language;\n    globalThis.cwqrConfig.language = this.language;\n    return this;\n  }\n\n  getResult() {\n    const { modelType, kv } = this;\n    let modelId, modelName, qr, modelVersion;\n    if (kv.I) {\n      modelId = kv.I.slice(0, 3);\n      [modelName, qr] = getModelInfo(modelId, modelType);\n      modelVersion = kv.I.slice(3, 4);\n    }\n\n    const serialNumber = kv.U;\n\n    let _parseM, mode, _mainMode;\n    if (kv.M) {\n      _parseM = new ParseMode(kv.M);\n      mode = _parseM.getModeInfo();\n      _mainMode = _parseM.getMainMode();\n    }\n\n    let setup;\n    if (kv.S) {\n      const parseS = new ParseSetup(kv.S);\n      setup = parseS.parseAll();\n    }\n\n    let expression, expressionE, expressionG, _function;\n    if (kv.E) {\n      const parseE = new ParseExpression(kv.E, modelType, modelId);\n      // TODO: parse Algo\n      if (kv.M && kv.S) {\n        expressionE = parseE.autoParse(kv.M, kv.S);\n      } else {\n        expressionE = parseE.parseMath();\n      }\n    }\n    if (kv.G) {\n      const parseG = new ParseExpression(kv.G, modelType, modelId);\n      if (kv.M && kv.S) {\n        expressionG = parseG.autoParse(kv.M, kv.S);\n      } else {\n        expressionG = parseG.parseMath();\n      }\n    }\n    if (['88', '09'].includes(_mainMode)) {\n      _function = [\n        { name: 'f(x)', expression: expressionE || '' },\n        { name: 'g(x)', expression: expressionG || '' },\n      ];\n    } else {\n      expression = expressionE;\n    }\n\n    let tableRange;\n    if (kv.P) {\n      tableRange = ParseTableRange(kv.P);\n    }\n\n    let result;\n    const R = kv.R || kv.Q;\n    if (R) {\n      const typeCode = R.slice(0, 2);\n      switch (typeCode) {\n        case 'MT':\n          result = ParseMatrixList(R);\n          break;\n        case 'VT':\n          result = ParseVectorList(R);\n          break;\n        case 'EQ':\n          result = ParseEquationResult(R, kv.M, kv.S, kv.C);\n          break;\n        case 'IN':\n          result = ParseInequalityResult(R);\n          break;\n        default:\n          if (_mainMode === '03' && _parseM.getResultTemplate().startsWith('F')) {\n            result = ParseStatisticResult(R, kv.M);\n          } else {\n            result = ParseNumberResult(R, kv.M, modelType, modelId);\n          }\n      }\n    }\n\n    // variable in Table mode, create table based on variable if the formula contains variable\n    let variable;\n    if (kv.V) {\n      variable = ParseVariableList(kv.V, modelType);\n    }\n\n    // any calculate in Vector or Matrix contains its defined vector or matrix in C\n    // in Equation, Inequality or Ratio mode, it's the entered coefficients\n    // in Distribution mode, it's the entered data\n    // in MathBox mode, it's the dice/coin number and attempts\n    let vector, matrix, equation, distribution, mathBox;\n    if (kv.C) {\n      if (kv.C.startsWith('M')) {\n        matrix = ParseMatrixList(kv.C);\n      } else if (kv.C.startsWith('V')) {\n        vector = ParseVectorList(kv.C);\n      } else if (kv.M) {\n        if (['45', '4A', '4B'].includes(_mainMode)) {\n          equation = ParseEquation(kv.M, kv.C);\n        } else if (_mainMode === '0C') {\n          distribution = ParseDistribution(kv.M, kv.C);\n        } else if (_mainMode === '4F') {\n          // TODO: MathBox Mode input\n        }\n      }\n    }\n\n    let spreadsheet, statistic\n    if (kv.T) {\n      if (kv.T.startsWith('SP')) {\n        spreadsheet = ParseSpreadsheet(kv.T);\n      } else {\n        statistic = ParseStatistic(kv.T, kv.M, kv.S);\n      }\n    }\n\n    return {\n      model: {\n        type: modelType,\n        id: modelId,\n        name: modelName,\n        version: modelVersion,\n        qr,\n        serialNumber,\n      },\n      mode,\n      expression,\n      function: _function,\n      equation,\n      tableRange,\n      result,\n      variable,\n      vector,\n      matrix,\n      spreadsheet,\n      statistic,\n      distribution,\n      mathBox,\n      setup,\n    };\n  }\n\n}\n\nexport const parseUrl = (url, lang) => {\n  const cwqr = new ClassWizQR();\n  return cwqr.setUrl(url, lang).getResult();\n}\n\nexport { availableLanguages } from \"./utils.js\";\n","import { ParseVariable } from \"./index.js\";\nimport { translate } from \"../utils.js\";\n\nexport const ParseTableRange = (parameter) => {\n  const rangeIndex = translate({\n    'en': ['Start', 'End', 'Step'],\n    'zh': ['开始值', '终止值', '步长'],\n  });\n  const split = parameter.match(/.{9}/g);\n  const result = [];\n  for (let i = 0; i < split.length; i++) {\n    const [latex, decimal] = new ParseVariable(`0${split[i]}`).get();\n    result.push({ name: rangeIndex[i], latex, decimal });\n  }\n  return result;\n}\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ascii00","ascii00_EY","asciiFA","asciiFB","asciiFB_EY","asciiFD","asciiFE","asciiFE_JP","modelCY","modelEY","MODEL_TYPE","JPModel","AsciiTable","modelType","modelId","_classCallCheck","asciiCopy","_objectSpread","combine","prefix","map","concat","k","includes","mathTemplate","recDecOverlineModel","recDecBracketModel","menuInfo","modeInfo","translate","dict","globalThis","cwqrConfig","language","availableLanguages","ParseMode","M","mainMode","slice","subMode","resultTemplate","reultFormat","inqType","solveFor","getMainMode","startsWith","mainName","getSubMode","getInqType","subName","undefined","setupInfo","ParseSetup","S","length","numberFormatMain","numberFormatSub","inputCode","outputCode","decimalMarkCode","angleUnitCode","fractionResultCode","complexResultCode","statisticsFrequencyCode","recurringDecimalCode","simplifyCode","autoPowerOffCode","tableTypeCode","engineerSymbolCode","digitSeparatorCode","multiLineFontCode","equationComplexRootCode","languageCode","isFullSetup","spreadsheetAutoCalcCode","spreadsheetShowCellCode","qrCodeVersionCode","algorithmBackgroundCode","algorithmUnitSettingCode","_this","parseCommon","type","code","name","setupValue","setupMap","getDecimalMarkCode","getAngleUnitCode","getFractionResultCode","getComplexResultCode","getStatisticsFrequencyCode","getRecurringDecimalCode","getSimplifyCode","getAutoPowerOffCode","getTableTypeCode","getEngineerSymbolCode","getDigitSeparatorCode","getMultiLineFontCode","getEquationComplexRootCode","getLanguageCode","getSpreadsheetAutoCalcCode","getSpreadsheetShowCellCode","getQRCodeVersionCode","getAlgorithmBackgroundCode","getAlgorithmUnitSettingCode","result","push","main","getNumberFormatMainCode","sub","getNumberFormatSubCode","i","parseNumberFormat","getInputCode","getOutputCode","parseInputOutput","_i","_Object$entries","entries","_Object$entries$_i","setup","inexact","quadrant","ParseExpression","E","asciiTable","asciiArray","match","join","recDecType","text","replaceAll","cur","next","endsWith","JSON","parse","tree","Array","isArray","item","_parseToLatex","_typeof","keys","curKey","curVal","a","b","c","n","first","last","middle","_setRecDecType","_parseToTree","e","parseLine","parseMath","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","digitsToString","d","ws","indexOfLastWord","str","w","getZeroString","checkInt32","min","max","Error","checkRoundingDigits","rm","repeating","di","r","rd","ceil","convertBase","baseIn","baseOut","j","arrL","arr","strL","indexOf","charAt","reverse","absoluteValue","abs","x","constructor","s","finalise","clampedTo","clamp","Ctor","NaN","gt","cmp","comparedTo","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","len","isZero","tinyPow","toString","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","m","rep","t","t3","t3plusx","isFinite","toExponential","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","xe","xLTy","pop","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","guard","sum","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","p","test","toLowerCase","Decimal","isHyperbolic","u","pi","atan2","config","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","arguments","isDecimalInstance","log2","log10","random","Uint32Array","copy","for","clone","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","ParseVariable","variable","val","_parseProperty","valType","valSign","valExp","valNum","numSign","int","dec","numDec","numberToLatex","fracLatex","fracDec","signFix","fracArr","split","decimal","_slicedToArray","_toDecimal","mm","latex","toOneSqrt","aLatex","aSign","bSign","_toOneSqrt2","aDecimal","_toOneSqrt4","bLatex","bDecimal","errCode","en","_toFrac","_toDMS","_toSqrt","_toError","expSplit","inputInfo","ParseMatrix","matrix","decimalResult","element","latexResult","row","_ParseVariable$get2","ParseMatrixList","C","regx","exec","parseInt","_ParseMatrix2","ParseVector","vector","_ParseVariable$get4","ParseVectorList","_ParseVector2","ParseCompressStatistic","T","data","tt","padStart","resultInfo","ParseNumberResult","R","parseM","ans1","ans2","ans1Latex","ans1Decimal","ans2Latex","ans2Decimal","template","getResultTemplate","varCode","getSolveFor","varAscii","ClassWizQR","url","kv","I","U","G","V","Q","URL","trim","_this$url","pathname","reduce","acc","_cur$split2","setModelType","setKV","setLanguage","modelName","qr","modelVersion","model","_getModelInfo2","_parseM","mode","_mainMode","expression","expressionE","expressionG","_function","tableRange","serialNumber","getModeInfo","parseAll","parseE","autoParse","parseG","parameter","rangeIndex","ParseTableRange","equation","distribution","spreadsheet","statistic","resultCode","noLocal","complexSetting","_ParseVariable$get8","rootCount","numberResult","_ParseVariable$get10","ParseEquationResult","returnResult","_ParseVariable$get6","ParseInequalityResult","_ParseVariable$get14","ParseStatisticResult","varIndex","ParseVariableList","_inputInfo$equType$su2","equType","omitPlus","elementRow","ParseEquation","ParseDistribution","position","array","from","cell","csv","ParseSpreadsheet","numList","head","ParseRawStatistic","ParseStatistic","id","version","function","mathBox","parseUrl","lang","setUrl","getResult"],"sourceRoot":""}